[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Metodología Cuantitativa y Análisis de Regresión Múltiple",
    "section": "",
    "text": "Gran parte de la investigación contemporánea centrada en el diseño, implementación y evaluación de intervenciones sociales descansa en el uso de métodos cuantitativos. Las exigencias de los contextos de profesionales actuales en que se conducen intervenciones sociales requieren el desarrollo de un manejo cada vez mayor de metodologías de análisis cuantitativo de datos. El curso se centra tanto en el diseño de investigación cuantitativa como en los métodos descriptivos, inferenciales y correlacionales de análisis. También pretende introducir al uso y aplicaciones de técnicas de análisis de regresión lineal múltiple y logística binaria.\nA lo largo del curso se desarrollan competencias básicas e intermedias de uso del programa estadístico R."
  },
  {
    "objectID": "index.html#descripción-del-curso",
    "href": "index.html#descripción-del-curso",
    "title": "Metodología Cuantitativa y Análisis de Regresión Múltiple",
    "section": "",
    "text": "Gran parte de la investigación contemporánea centrada en el diseño, implementación y evaluación de intervenciones sociales descansa en el uso de métodos cuantitativos. Las exigencias de los contextos de profesionales actuales en que se conducen intervenciones sociales requieren el desarrollo de un manejo cada vez mayor de metodologías de análisis cuantitativo de datos. El curso se centra tanto en el diseño de investigación cuantitativa como en los métodos descriptivos, inferenciales y correlacionales de análisis. También pretende introducir al uso y aplicaciones de técnicas de análisis de regresión lineal múltiple y logística binaria.\nA lo largo del curso se desarrollan competencias básicas e intermedias de uso del programa estadístico R."
  },
  {
    "objectID": "index.html#objetivos-de-aprendizaje",
    "href": "index.html#objetivos-de-aprendizaje",
    "title": "Metodología Cuantitativa y Análisis de Regresión Múltiple",
    "section": "Objetivos de aprendizaje",
    "text": "Objetivos de aprendizaje\n\nIdentificar tipos de problemas de análisis de datos cuantitativos.\nArticular un diseño de investigación cuantitativo a partir de sus componentes.\nTomar decisiones estratégicas y fundadas del tipo de análisis a realizar para determinado tipo de datos.\nDemostrar habilidades de análisis hipotético-deductivo.\nReportar resultados del análisis de datos cuantitativos."
  },
  {
    "objectID": "index.html#calendario-de-clases",
    "href": "index.html#calendario-de-clases",
    "title": "Metodología Cuantitativa y Análisis de Regresión Múltiple",
    "section": "Calendario de clases",
    "text": "Calendario de clases\nLa programación de las clases es la siguiente:\n\n\n\n\n\n\n\n\n\n\n\n\nFecha\nContenidos\nPresentación\nNotas\nCódigo\n\n\n\n\nSesión 0\n15 de agosto\nInstalación de R y RStudio\n\n\n\n\n\nSesión 1\n23 de agosto\nIntroducción a R\n\n\n  \n\n\nSesión 2\n30 de agosto\nTipos y estructuras de datos\n\n\n  \n\n\nSesión 3\n6 de septiembre\nIntroducción a tidyverse\n ️\n\n\n\n\nSesión 4\n13 de septiembre\nEstadística descriptiva\n\n\n\n\n\nSesión 5\n20 de septiembre\nTablas de contingencia\n\n\n\n\n\nSesión 6\n18 de octubre\nIntervalos de confianza\n\n\n\n\n\nSesión 7\n8 de noviembre\nPrueba χ²\n\n\n\n\n\nSesión 8\n22 de noviembre\nRegresión lineal"
  },
  {
    "objectID": "index.html#metodología-del-curso",
    "href": "index.html#metodología-del-curso",
    "title": "Metodología Cuantitativa y Análisis de Regresión Múltiple",
    "section": "Metodología del curso",
    "text": "Metodología del curso\nEl curso es de carácter práctico, por lo que tiene el propósito de enseñar a programar a través de proyectos concretos. Además, se contemplan las siguientes instancias:\n\nClases expositivas.\nDesarrollo de ejercicios en clases.\nTalleres de aplicación en R."
  },
  {
    "objectID": "index.html#evaluaciones",
    "href": "index.html#evaluaciones",
    "title": "Metodología Cuantitativa y Análisis de Regresión Múltiple",
    "section": "Evaluaciones",
    "text": "Evaluaciones\nEl curso tendrá 4 evaluaciones ponderadas y organizadas de la siguiente manera:\n\n\n\n\n\n\n\n\n\n\n\n\n\nPublicación\nEntrega\nCurso\nPonderación\nEvaluación\nSolución\n\n\n\n\nTrabajo 1\n30 de agosto\n6 de septiembre\nMetodología Cuantitativa\n50%\n\n\n\n\nTrabajo 2\n20 de septiembre\n27 de septiembre\nMetodología Cuantitativa\n50%\n\n\n\n\nTrabajo 3\n8 de noviembre\n15 de noviembre\nAnálisis de Regresión Múltiple\n50%\n\n\n\n\nTrabajo 4\n29 de noviembre\n6 de diciembre\nAnálisis de Regresión Múltiple\n50%\n\n\n\n\n\nTodas las evaluaciones se deben enviar a través de la plataforma Canvas."
  },
  {
    "objectID": "index.html#integridad-académica",
    "href": "index.html#integridad-académica",
    "title": "Metodología Cuantitativa y Análisis de Regresión Múltiple",
    "section": "Integridad académica",
    "text": "Integridad académica\nLas faltas a la integridad académica son acciones de plagio, omitir información, fraude y/o adulteración de documentación cometidas de forma individual o colectiva, que atenten contra los valores de honestidad, veracidad, confianza, justicia, respeto y responsabilidad, dentro del marco de actividades académicas.\nLos casos de falta a la integridad académica ocurridos durante la aplicación de alguna evaluación en este curso serán sancionados automáticamente con un 1.0. Adicionalmente, y conforme a la Política de Integridad Académica de la Universidad, toda falta también será derivada al Comité de Integridad Académica de la Facultad de Ciencias Sociales. Este órgano definirá la gravedad de la falta (leve, moderada o grave) y las consecuencias de dicha falta, con foco formativo. Una vez finalizado el proceso, se ingresará el caso en el Registro de Faltas a la Integridad Académica, y se realizará seguimiento del caso. En caso de que la o el estudiante no aceptase las consecuencias establecidas por la comisión, puede solicitar la revisión de su caso a la misma.\nUna vez realizada la revisión, y si aún el o la estudiante no desea asumir las consecuencias planteadas por la comisión, podrá apelar a Secretaría General de la Universidad. Los detalles de la política y la gestión de faltas a la honestidad académica se encuentran aquí: https://integridadacademica.uc.cl"
  },
  {
    "objectID": "index.html#contribuciones-y-agradecimientos",
    "href": "index.html#contribuciones-y-agradecimientos",
    "title": "Metodología Cuantitativa y Análisis de Regresión Múltiple",
    "section": "Contribuciones y agradecimientos",
    "text": "Contribuciones y agradecimientos\nEsta página usa como inspiración el trabajo de la profesora Mine Çetinkaya-Rundel, Directora de Estudios de Grado del Departamento de Ciencias Estadísticas de la Universidad de Duke.\n\nEn caso de tener interés en ese curso, la dirección es: STA 210"
  },
  {
    "objectID": "slides/clase-3/clase_3_presentación.html",
    "href": "slides/clase-3/clase_3_presentación.html",
    "title": "Introducción a Tidyverse",
    "section": "",
    "text": "I. Tidyverse\nII. Operador pipe |&gt;\nIII. Paquete dplyr\nIV. Aplicación\nV. Ejercicio"
  },
  {
    "objectID": "slides/clase-3/clase_3_presentación.html#contenidos",
    "href": "slides/clase-3/clase_3_presentación.html#contenidos",
    "title": "Introducción a Tidyverse",
    "section": "Contenidos",
    "text": "Contenidos\nI. Tidyverse\nII. Operador pipe |&gt;\nIII. Paquete dplyr\nIV. Aplicación\nV. Ejercicio"
  },
  {
    "objectID": "slides/clase-3/clase_3_presentación.html#section",
    "href": "slides/clase-3/clase_3_presentación.html#section",
    "title": "Introducción a Tidyverse",
    "section": "",
    "text": "I. Tidyverse"
  },
  {
    "objectID": "slides/clase-3/clase_3_presentación.html#tidyverse-1",
    "href": "slides/clase-3/clase_3_presentación.html#tidyverse-1",
    "title": "Introducción a Tidyverse",
    "section": "Tidyverse (1)",
    "text": "Tidyverse (1)\nEl entorno tidyverse corresponde a una colección de paquetes de R cuyo diseño está enfocado en el análisis estadístico y la ciencia de datos. Todos los paquetes que forman parte comparten una filosofía de diseño que se traduce en una estructura y gramática común.\n\nEstá diseñado para trabajar con datos ordenados:\n\nCada observación es una fila.\nCada variable es una columna.\nCada celda es un solo valor."
  },
  {
    "objectID": "slides/clase-3/clase_3_presentación.html#tidyverse-2",
    "href": "slides/clase-3/clase_3_presentación.html#tidyverse-2",
    "title": "Introducción a Tidyverse",
    "section": "Tidyverse (2)",
    "text": "Tidyverse (2)\n\nCódigo más legible, nombres de funciones más atingentes, gramática común.\n\n\n\n“This is particularly important for R, because it’s a language that’s used primarily by non-programmers, and we want to make it as easy as possible for first-time and end-user programmers to learn the tidyverse.” – Equipo tidyverse.\n\n\n\nConcatenación de código con el operador operador |&gt;.\nCiclo completo del análisis de datos."
  },
  {
    "objectID": "slides/clase-3/clase_3_presentación.html#tidyverse-3",
    "href": "slides/clase-3/clase_3_presentación.html#tidyverse-3",
    "title": "Introducción a Tidyverse",
    "section": "Tidyverse (3)",
    "text": "Tidyverse (3)\nCuando se instala tidyverse, se instalan una serie de paquetes. Aquellos que pertenecen al núcleo se cargan automáticamente cuando se ejecuta library(tidyverse).\n\n\n\n\ntibble: nuevo formato de dataframes con mejoras de visualización.\nreadr: lectura de datos “rectangulares” como formatos .csv, .tsv, etc.\ndplyr: funciones para el procesamiento y manipulación de datos.\ntidyr: funciones más avanzadas para el procesamiento de datos.\nstring: funciones para trabajar con datos tipo string.\nforcats: funciones para trabajar con factores.\nggplot2: visualización de datos.\npurrr: programación funcional, bucles, código eficiente."
  },
  {
    "objectID": "slides/clase-3/clase_3_presentación.html#tidyverse-3-1",
    "href": "slides/clase-3/clase_3_presentación.html#tidyverse-3-1",
    "title": "Introducción a Tidyverse",
    "section": "Tidyverse (3)",
    "text": "Tidyverse (3)\nOtros paquetes relevantes que se instalan, pero deben cargarse:\n\n\nlubridate: trabajar con fechas.\nreadxl: lectura de datos en formato Excel .xls y .xlsx.\nhaven: lectura de datos de programas estadísticos en formato SPSS, Stata y SAS.\nglue: alternativa a paste() que facilita combinar datos y strings.\n\nMás información disponible en la página oficial."
  },
  {
    "objectID": "slides/clase-3/clase_3_presentación.html#section-1",
    "href": "slides/clase-3/clase_3_presentación.html#section-1",
    "title": "Introducción a Tidyverse",
    "section": "",
    "text": "II. Operador pipe |&gt;"
  },
  {
    "objectID": "slides/clase-3/clase_3_presentación.html#operador-1",
    "href": "slides/clase-3/clase_3_presentación.html#operador-1",
    "title": "Introducción a Tidyverse",
    "section": "Operador |> (1)",
    "text": "Operador |&gt; (1)\n\nExpresa de manera clara una secuencia de operaciones concatenando instrucciones de código.\nPasa el elemento que está a la izquierda como argumento de la función que está a la derecha.\nDisponible desde R 4.1.0 (mayo 2021). Antes se usaba -y todavía- el operador %&gt;%.\nSe puede usar el atajo de teclado CTRL/CMD + SHIFT + M. Requiere habilitar Tools → Global Options → Code → Editing → “Use native pipe operator |&gt;”"
  },
  {
    "objectID": "slides/clase-3/clase_3_presentación.html#operador-2",
    "href": "slides/clase-3/clase_3_presentación.html#operador-2",
    "title": "Introducción a Tidyverse",
    "section": "Operador |> (2)",
    "text": "Operador |&gt; (2)\nVeamos un ejemplo usando el paquete “guaguas”:\n\n# Cargamos tidyverse\nlibrary(tidyverse)\n\n\ndata &lt;- guaguas::guaguas\nhead(data, n = 3)\n\n# A tibble: 3 × 5\n   anio nombre sexo      n proporcion\n  &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt; &lt;dbl&gt;      &lt;dbl&gt;\n1  1920 María  F      2130     0.104 \n2  1920 José   M       984     0.0483\n3  1920 Juan   M       636     0.0312\n\ndata |&gt; head(n = 3)\n\n# A tibble: 3 × 5\n   anio nombre sexo      n proporcion\n  &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt; &lt;dbl&gt;      &lt;dbl&gt;\n1  1920 María  F      2130     0.104 \n2  1920 José   M       984     0.0483\n3  1920 Juan   M       636     0.0312"
  },
  {
    "objectID": "slides/clase-3/clase_3_presentación.html#operador-3",
    "href": "slides/clase-3/clase_3_presentación.html#operador-3",
    "title": "Introducción a Tidyverse",
    "section": "Operador |> (3)",
    "text": "Operador |&gt; (3)\nUsando las funciones de los paquetes que veremos en esta sesión, podemos comparar la sintaxis usando el operador |&gt; versus la prioridad de paréntesis.\n\ndata |&gt;\n  filter(anio == 2020) |&gt;\n  slice_head(n = 3)\n\n# A tibble: 3 × 5\n   anio nombre  sexo      n proporcion\n  &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt; &lt;dbl&gt;      &lt;dbl&gt;\n1  2020 Mateo   M      3866     0.0198\n2  2020 Agustín M      2535     0.0130\n3  2020 Sofía   F      2465     0.0126\n\n\n\nslice_head(filter(data, anio == 2020), n = 3)\n\n# A tibble: 3 × 5\n   anio nombre  sexo      n proporcion\n  &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt; &lt;dbl&gt;      &lt;dbl&gt;\n1  2020 Mateo   M      3866     0.0198\n2  2020 Agustín M      2535     0.0130\n3  2020 Sofía   F      2465     0.0126"
  },
  {
    "objectID": "slides/clase-3/clase_3_presentación.html#operador-4",
    "href": "slides/clase-3/clase_3_presentación.html#operador-4",
    "title": "Introducción a Tidyverse",
    "section": "Operador |> (4)",
    "text": "Operador |&gt; (4)\n¿Qué código les parece más legible?\n\n\n\nMás legible: va de izquierda a derecha.\nEvita errores de prioridad de paréntesis.\nMenos sensible al número de operaciones."
  },
  {
    "objectID": "slides/clase-3/clase_3_presentación.html#section-2",
    "href": "slides/clase-3/clase_3_presentación.html#section-2",
    "title": "Introducción a Tidyverse",
    "section": "",
    "text": "III. Paquete dplyr"
  },
  {
    "objectID": "slides/clase-3/clase_3_presentación.html#paquete-dplyr-1",
    "href": "slides/clase-3/clase_3_presentación.html#paquete-dplyr-1",
    "title": "Introducción a Tidyverse",
    "section": "Paquete dplyr (1)",
    "text": "Paquete dplyr (1)\nContiene una serie de funciones para realizar tareas comunes en el procesamiento de datos:\n\n\nExplorar los datos: glimpse().\nSeleccionar variables: select().\nFiltrar observaciones: filter().\nRenombrar variables: rename().\nOrdenar los datos según criterios: arrange().\nCambiar orden de las columnas: relocate().\nSeleccionar observaciones: slice_head(), slice_tail(), slice_sample, etc."
  },
  {
    "objectID": "slides/clase-3/clase_3_presentación.html#paquete-dplyr-2",
    "href": "slides/clase-3/clase_3_presentación.html#paquete-dplyr-2",
    "title": "Introducción a Tidyverse",
    "section": "Paquete dplyr (2)",
    "text": "Paquete dplyr (2)\n\n\nAñadir nuevas variables o modificar las existentes: mutate().\nAgrupar datos: group_by() o argumento .by.\nEstadísticas agrupadas: summarise().\nContar: count().\nUnir conjuntos de datos: familia de mutating y filtering joins.\nCondiciones lógicas: if_else() y case_when().\nOperaciones por filas: rowwise().\nIdentificar filas únicas/distintas: distinct().\nTransformar a perdidos: na_if().\nAplicar operaciones a múltiples columnas: across().\n¡Muchas otras!"
  },
  {
    "objectID": "slides/clase-3/clase_3_presentación.html#función-glimpse",
    "href": "slides/clase-3/clase_3_presentación.html#función-glimpse",
    "title": "Introducción a Tidyverse",
    "section": "Función glimpse()",
    "text": "Función glimpse()\nPermite obtener una vista rápida del conjunto de datos.\n\ndata |&gt; glimpse()\n\nRows: 858,782\nColumns: 5\n$ anio       &lt;dbl&gt; 1920, 1920, 1920, 1920, 1920, 1920, 1920, 1920, 1920, 1920,…\n$ nombre     &lt;chr&gt; \"María\", \"José\", \"Juan\", \"Luis\", \"Rosa\", \"Ana\", \"Manuel\", \"…\n$ sexo       &lt;chr&gt; \"F\", \"M\", \"M\", \"M\", \"F\", \"F\", \"M\", \"F\", \"M\", \"M\", \"F\", \"F\",…\n$ n          &lt;dbl&gt; 2130, 984, 636, 631, 426, 340, 326, 289, 277, 269, 239, 218…\n$ proporcion &lt;dbl&gt; 0.10449885, 0.04827552, 0.03120247, 0.03095717, 0.02089977,…"
  },
  {
    "objectID": "slides/clase-3/clase_3_presentación.html#función-select-1",
    "href": "slides/clase-3/clase_3_presentación.html#función-select-1",
    "title": "Introducción a Tidyverse",
    "section": "Función select() (1)",
    "text": "Función select() (1)\nPermite seleccionar columnas de un conjunto de datos.\n\ndata |&gt; select(anio, nombre, n) |&gt; slice_head(n = 2)\n\n# A tibble: 2 × 3\n   anio nombre     n\n  &lt;dbl&gt; &lt;chr&gt;  &lt;dbl&gt;\n1  1920 María   2130\n2  1920 José     984\n\n\n\nAnteponiendo el signo menos - se puede hacer selección negativa.\n\n\ndata |&gt; select(-proporcion, -sexo) |&gt; slice_head(n = 2)\n\n# A tibble: 2 × 3\n   anio nombre     n\n  &lt;dbl&gt; &lt;chr&gt;  &lt;dbl&gt;\n1  1920 María   2130\n2  1920 José     984"
  },
  {
    "objectID": "slides/clase-3/clase_3_presentación.html#función-select-2",
    "href": "slides/clase-3/clase_3_presentación.html#función-select-2",
    "title": "Introducción a Tidyverse",
    "section": "Función select() (2)",
    "text": "Función select() (2)\n\nTambién se puede hacer uso de selection helpers como starts_with(), ends_with(), contains(), etc.\n\n\n# Selecciona todo lo que empieza con n\ndata |&gt; select(starts_with(\"n\")) |&gt; slice_head(n = 2)\n\n# A tibble: 2 × 2\n  nombre     n\n  &lt;chr&gt;  &lt;dbl&gt;\n1 María   2130\n2 José     984\n\n\n\n# Selecciona todo lo que termine con o\ndata |&gt; select(ends_with(\"o\")) |&gt; slice_head(n = 2)\n\n# A tibble: 2 × 2\n   anio sexo \n  &lt;dbl&gt; &lt;chr&gt;\n1  1920 F    \n2  1920 M"
  },
  {
    "objectID": "slides/clase-3/clase_3_presentación.html#función-select-2-1",
    "href": "slides/clase-3/clase_3_presentación.html#función-select-2-1",
    "title": "Introducción a Tidyverse",
    "section": "Función select() (2)",
    "text": "Función select() (2)\n\nO realizar una selección según el tipo de variable agregando el predicado where().\n\n\n# Selecciona todas las variables character\ndata |&gt; select(where(is.character)) |&gt; slice_head(n = 2)\n\n# A tibble: 2 × 2\n  nombre sexo \n  &lt;chr&gt;  &lt;chr&gt;\n1 María  F    \n2 José   M    \n\n\n\n# Selecciona todas las variables numeric\ndata |&gt; select(where(is.numeric)) |&gt; slice_head(n = 2)\n\n# A tibble: 2 × 3\n   anio     n proporcion\n  &lt;dbl&gt; &lt;dbl&gt;      &lt;dbl&gt;\n1  1920  2130     0.104 \n2  1920   984     0.0483\n\n\n\n¡Incluso permite renombrar variables! (Ver notas de la clase).\n\nMás opciones se pueden revisar escribiendo en la consola de R ?select si se tiene cargado tidyverse."
  },
  {
    "objectID": "slides/clase-3/clase_3_presentación.html#función-rename",
    "href": "slides/clase-3/clase_3_presentación.html#función-rename",
    "title": "Introducción a Tidyverse",
    "section": "Función rename()",
    "text": "Función rename()\nPermite renombrar columnas siguiendo la estructura nuevo_nombre = antiguo_nombre.\n\n# Renombra las variables\ndata |&gt; rename(frec = n,\n               prop = proporcion)\n\n# A tibble: 858,782 × 5\n    anio nombre sexo   frec   prop\n   &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt; &lt;dbl&gt;  &lt;dbl&gt;\n 1  1920 María  F      2130 0.104 \n 2  1920 José   M       984 0.0483\n 3  1920 Juan   M       636 0.0312\n 4  1920 Luis   M       631 0.0310\n 5  1920 Rosa   F       426 0.0209\n 6  1920 Ana    F       340 0.0167\n 7  1920 Manuel M       326 0.0160\n 8  1920 Olga   F       289 0.0142\n 9  1920 Carlos M       277 0.0136\n10  1920 Pedro  M       269 0.0132\n# ℹ 858,772 more rows\n\n\n\n¡Noten que aquí aún no se sobreescribe el objeto data!"
  },
  {
    "objectID": "slides/clase-3/clase_3_presentación.html#función-relocate",
    "href": "slides/clase-3/clase_3_presentación.html#función-relocate",
    "title": "Introducción a Tidyverse",
    "section": "Función relocate()",
    "text": "Función relocate()\nCambia la posición de las columnas.\n\n# Va después de proporcion\ndata |&gt; relocate(anio, .after = proporcion) |&gt;\n  slice_tail(n = 4)\n\n# A tibble: 4 × 5\n  nombre sexo      n proporcion  anio\n  &lt;chr&gt;  &lt;chr&gt; &lt;dbl&gt;      &lt;dbl&gt; &lt;dbl&gt;\n1 Zuri   F         1 0.00000562  2021\n2 Zurick F         1 0.00000562  2021\n3 Zury   F         1 0.00000562  2021\n4 Zyhara F         1 0.00000562  2021\n\n\n\n# Va antes de proporcion\ndata |&gt; relocate(anio, .before = proporcion) |&gt;\n  slice_tail(n = 4)\n\n# A tibble: 4 × 5\n  nombre sexo      n  anio proporcion\n  &lt;chr&gt;  &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt;      &lt;dbl&gt;\n1 Zuri   F         1  2021 0.00000562\n2 Zurick F         1  2021 0.00000562\n3 Zury   F         1  2021 0.00000562\n4 Zyhara F         1  2021 0.00000562"
  },
  {
    "objectID": "slides/clase-3/clase_3_presentación.html#función-filter-1",
    "href": "slides/clase-3/clase_3_presentación.html#función-filter-1",
    "title": "Introducción a Tidyverse",
    "section": "Función filter() (1)",
    "text": "Función filter() (1)\nPermite obtener un subconjunto de los datos a partir de las condiciones lógicas especificadas.\n\n\n\n\n\n\n\n\nSímbolo\nSignificado\n\n\n\n\n==\nIgualdad. No debe confundirse con “=”, que es un operador de asignación\n\n\n!=\nDistinto\n\n\n!\nNegación de una expresión lógica\n\n\n&gt;\nMayor que\n\n\n&lt;\nMenor que\n\n\n&gt;=\nMayor o igual que\n\n\n&lt;=\nMenor o igual que\n\n\n%in%\nOperador de R que indica un conjunto de elementos\n\n\n&\nOperador y. Todas las condiciones evaluadas deben ser verdaderas para que la expresión lo sea\n\n\n|\nOperador o. Al menos una condición debe ser verdadera para que la expresión lo sea"
  },
  {
    "objectID": "slides/clase-3/clase_3_presentación.html#función-filter-2",
    "href": "slides/clase-3/clase_3_presentación.html#función-filter-2",
    "title": "Introducción a Tidyverse",
    "section": "Función filter() (2)",
    "text": "Función filter() (2)\n\n# Filtro por año\ndata |&gt; filter(anio == 2021) \n\n# A tibble: 13,265 × 5\n    anio nombre   sexo      n proporcion\n   &lt;dbl&gt; &lt;chr&gt;    &lt;chr&gt; &lt;dbl&gt;      &lt;dbl&gt;\n 1  2021 Mateo    M      3267     0.0184\n 2  2021 Emma     F      2352     0.0132\n 3  2021 Sofía    F      2251     0.0126\n 4  2021 Isabella F      2155     0.0121\n 5  2021 Lucas    M      2054     0.0115\n 6  2021 Emilia   F      2044     0.0115\n 7  2021 Agustín  M      1972     0.0111\n 8  2021 Benjamín M      1935     0.0109\n 9  2021 Agustina F      1816     0.0102\n10  2021 Santiago M      1809     0.0102\n# ℹ 13,255 more rows"
  },
  {
    "objectID": "slides/clase-3/clase_3_presentación.html#función-filter-3",
    "href": "slides/clase-3/clase_3_presentación.html#función-filter-3",
    "title": "Introducción a Tidyverse",
    "section": "Función filter() (3)",
    "text": "Función filter() (3)\n\n# Filtro por año y nombre\ndata |&gt; filter(anio == 2021 & nombre == \"Susana\") \n\n# A tibble: 1 × 5\n   anio nombre sexo      n proporcion\n  &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt; &lt;dbl&gt;      &lt;dbl&gt;\n1  2021 Susana F        16  0.0000899"
  },
  {
    "objectID": "slides/clase-3/clase_3_presentación.html#función-filter-4",
    "href": "slides/clase-3/clase_3_presentación.html#función-filter-4",
    "title": "Introducción a Tidyverse",
    "section": "Función filter() (4)",
    "text": "Función filter() (4)\n\n# Filtro usando |\ndata |&gt; filter(anio == 2021 | anio == 2019) \n\n# A tibble: 28,306 × 5\n    anio nombre   sexo      n proporcion\n   &lt;dbl&gt; &lt;chr&gt;    &lt;chr&gt; &lt;dbl&gt;      &lt;dbl&gt;\n 1  2019 Mateo    M      4152     0.0196\n 2  2019 Isabella F      3101     0.0147\n 3  2019 Agustina F      2932     0.0139\n 4  2019 Sofía    F      2924     0.0138\n 5  2019 Agustín  M      2869     0.0136\n 6  2019 Santiago M      2658     0.0126\n 7  2019 Emilia   F      2596     0.0123\n 8  2019 Tomás    M      2570     0.0122\n 9  2019 Benjamín M      2537     0.0120\n10  2019 Lucas    M      2468     0.0117\n# ℹ 28,296 more rows"
  },
  {
    "objectID": "slides/clase-3/clase_3_presentación.html#función-filter-5",
    "href": "slides/clase-3/clase_3_presentación.html#función-filter-5",
    "title": "Introducción a Tidyverse",
    "section": "Función filter() (5)",
    "text": "Función filter() (5)\n\n# Filtro usando %in%\ndata |&gt; filter(anio %in% c(1998, 2006, 2007:2010)) \n\n# A tibble: 71,792 × 5\n    anio nombre    sexo      n proporcion\n   &lt;dbl&gt; &lt;chr&gt;     &lt;chr&gt; &lt;dbl&gt;      &lt;dbl&gt;\n 1  1998 Javiera   F      7473     0.0281\n 2  1998 Camila    F      7266     0.0273\n 3  1998 Nicolás   M      6090     0.0229\n 4  1998 María     F      5665     0.0213\n 5  1998 Matías    M      5591     0.0210\n 6  1998 Sebastián M      4726     0.0178\n 7  1998 Catalina  F      4706     0.0177\n 8  1998 Diego     M      4295     0.0161\n 9  1998 José      M      4184     0.0157\n10  1998 Francisca F      3872     0.0145\n# ℹ 71,782 more rows"
  },
  {
    "objectID": "slides/clase-3/clase_3_presentación.html#función-filter-6",
    "href": "slides/clase-3/clase_3_presentación.html#función-filter-6",
    "title": "Introducción a Tidyverse",
    "section": "Función filter() (6)",
    "text": "Función filter() (6)\n\n# Filtro usando negación\ndata |&gt; filter(anio == 1920 & !(nombre %in% c(\"María\", \"José\")))\n\n# A tibble: 2,026 × 5\n    anio nombre sexo      n proporcion\n   &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt; &lt;dbl&gt;      &lt;dbl&gt;\n 1  1920 Juan   M       636     0.0312\n 2  1920 Luis   M       631     0.0310\n 3  1920 Rosa   F       426     0.0209\n 4  1920 Ana    F       340     0.0167\n 5  1920 Manuel M       326     0.0160\n 6  1920 Olga   F       289     0.0142\n 7  1920 Carlos M       277     0.0136\n 8  1920 Pedro  M       269     0.0132\n 9  1920 Juana  F       239     0.0117\n10  1920 Marta  F       218     0.0107\n# ℹ 2,016 more rows"
  },
  {
    "objectID": "slides/clase-3/clase_3_presentación.html#función-filter-7",
    "href": "slides/clase-3/clase_3_presentación.html#función-filter-7",
    "title": "Introducción a Tidyverse",
    "section": "Función filter() (7)",
    "text": "Función filter() (7)\n\ndata |&gt; filter(proporcion &gt;= 0.02 & anio &gt; 2014)\n\n# A tibble: 3 × 5\n   anio nombre  sexo      n proporcion\n  &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt; &lt;dbl&gt;      &lt;dbl&gt;\n1  2015 Agustín M      5355     0.0218\n2  2017 Mateo   M      4736     0.0216\n3  2018 Mateo   M      4468     0.0201"
  },
  {
    "objectID": "slides/clase-3/clase_3_presentación.html#función-filter-8",
    "href": "slides/clase-3/clase_3_presentación.html#función-filter-8",
    "title": "Introducción a Tidyverse",
    "section": "Función filter() (8)",
    "text": "Función filter() (8)\n\n# Filtro usando el paquete stringr y condiciones en paréntesis\ndata |&gt; filter(stringr::str_detect(nombre, \"^X\") & (anio &gt;= 2018 & anio != 2021))\n\n# A tibble: 88 × 5\n    anio nombre  sexo      n proporcion\n   &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt; &lt;dbl&gt;      &lt;dbl&gt;\n 1  2018 Xiomara F        41 0.000184  \n 2  2018 Ximena  F        27 0.000121  \n 3  2018 Xavier  M         8 0.0000359 \n 4  2018 Xin     F         8 0.0000359 \n 5  2018 Xander  M         3 0.0000135 \n 6  2018 Xavi    M         2 0.00000898\n 7  2018 Xaviera F         2 0.00000898\n 8  2018 Xiang   M         2 0.00000898\n 9  2018 Xabi    M         1 0.00000449\n10  2018 Xaschey F         1 0.00000449\n# ℹ 78 more rows"
  },
  {
    "objectID": "slides/clase-3/clase_3_presentación.html#función-arrange-1",
    "href": "slides/clase-3/clase_3_presentación.html#función-arrange-1",
    "title": "Introducción a Tidyverse",
    "section": "Función arrange() (1)",
    "text": "Función arrange() (1)\nPermite ordenar los valores a partir de columnas. Por defecto será de manera ascendente.\n\ndata |&gt; arrange(n)\n\n# A tibble: 858,782 × 5\n    anio nombre    sexo      n proporcion\n   &lt;dbl&gt; &lt;chr&gt;     &lt;chr&gt; &lt;dbl&gt;      &lt;dbl&gt;\n 1  1920 Aaron     M         1  0.0000491\n 2  1920 Abdolina  F         1  0.0000491\n 3  1920 Abdon     M         1  0.0000491\n 4  1920 Abigail   F         1  0.0000491\n 5  1920 Abrahan   M         1  0.0000491\n 6  1920 Abrelena  F         1  0.0000491\n 7  1920 Accidalia F         1  0.0000491\n 8  1920 Acencio   M         1  0.0000491\n 9  1920 Adalia    F         1  0.0000491\n10  1920 Adelino   M         1  0.0000491\n# ℹ 858,772 more rows"
  },
  {
    "objectID": "slides/clase-3/clase_3_presentación.html#función-arrange-2",
    "href": "slides/clase-3/clase_3_presentación.html#función-arrange-2",
    "title": "Introducción a Tidyverse",
    "section": "Función arrange() (2)",
    "text": "Función arrange() (2)\nCon la función desc() se puede ordenar de manera descendente.\n\n# Ordena por año ascendente y por frecuencia descendente\ndata |&gt; filter(nombre %in% c(\"Andrea\", \"Alberto\")) |&gt; \n  arrange(anio, desc(n))\n\n# A tibble: 218 × 5\n    anio nombre  sexo      n proporcion\n   &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt; &lt;dbl&gt;      &lt;dbl&gt;\n 1  1920 Alberto M        53   0.00260 \n 2  1920 Andrea  F         8   0.000392\n 3  1921 Alberto M       130   0.00282 \n 4  1921 Andrea  F        19   0.000412\n 5  1922 Alberto M       121   0.00249 \n 6  1922 Andrea  F        19   0.000391\n 7  1923 Alberto M       168   0.00332 \n 8  1923 Andrea  F        14   0.000276\n 9  1924 Alberto M       137   0.00247 \n10  1924 Andrea  F        25   0.000451\n# ℹ 208 more rows"
  },
  {
    "objectID": "slides/clase-3/clase_3_presentación.html#función-slice-1",
    "href": "slides/clase-3/clase_3_presentación.html#función-slice-1",
    "title": "Introducción a Tidyverse",
    "section": "Función slice() (1)",
    "text": "Función slice() (1)\nPermite seleccionar filas basadas en su posición.\n\ndata |&gt; slice(20) # Selecciona la fila en la posición 20\n\n# A tibble: 1 × 5\n   anio nombre    sexo      n proporcion\n  &lt;dbl&gt; &lt;chr&gt;     &lt;chr&gt; &lt;dbl&gt;      &lt;dbl&gt;\n1  1920 Margarita F       146    0.00716\n\n\n\ndata |&gt; slice(20:22) # Selecciona filas desde la 20 a 22\n\n# A tibble: 3 × 5\n   anio nombre    sexo      n proporcion\n  &lt;dbl&gt; &lt;chr&gt;     &lt;chr&gt; &lt;dbl&gt;      &lt;dbl&gt;\n1  1920 Margarita F       146    0.00716\n2  1920 Héctor    M       138    0.00677\n3  1920 Julio     M       134    0.00657"
  },
  {
    "objectID": "slides/clase-3/clase_3_presentación.html#función-slice-2",
    "href": "slides/clase-3/clase_3_presentación.html#función-slice-2",
    "title": "Introducción a Tidyverse",
    "section": "Función slice() (2)",
    "text": "Función slice() (2)\n\ndata |&gt; slice(-(1:800000)) # Selecciona todas menos desde la 1 a 800.000\n\n# A tibble: 58,782 × 5\n    anio nombre     sexo      n proporcion\n   &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt; &lt;dbl&gt;      &lt;dbl&gt;\n 1  2017 Widekenley M         1 0.00000456\n 2  2017 Wideleïca  F         1 0.00000456\n 3  2017 Wideleyca  F         1 0.00000456\n 4  2017 Widelini   F         1 0.00000456\n 5  2017 Widelka    F         1 0.00000456\n 6  2017 Widenaëlle F         1 0.00000456\n 7  2017 Widialine  F         1 0.00000456\n 8  2017 Widjina    F         1 0.00000456\n 9  2017 Widjinaïca F         1 0.00000456\n10  2017 Widlanne   F         1 0.00000456\n# ℹ 58,772 more rows"
  },
  {
    "objectID": "slides/clase-3/clase_3_presentación.html#función-slice-3",
    "href": "slides/clase-3/clase_3_presentación.html#función-slice-3",
    "title": "Introducción a Tidyverse",
    "section": "Función slice() (3)",
    "text": "Función slice() (3)\nTambién cuenta con las funciones slice_head() y slice_tail(). Además del argumento n, incluye el argumento prop para seleccionar una proporción de filas.\n\ndata |&gt; slice_head(n = 2) # 2 Filas\n\n# A tibble: 2 × 5\n   anio nombre sexo      n proporcion\n  &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt; &lt;dbl&gt;      &lt;dbl&gt;\n1  1920 María  F      2130     0.104 \n2  1920 José   M       984     0.0483\n\n\n\ndata |&gt; slice_tail(prop = 0.01) # Partiendo desde las últimas filas, el 1%\n\n# A tibble: 8,587 × 5\n    anio nombre    sexo      n proporcion\n   &lt;dbl&gt; &lt;chr&gt;     &lt;chr&gt; &lt;dbl&gt;      &lt;dbl&gt;\n 1  2021 Amenadil  M         1 0.00000562\n 2  2021 Amets     F         1 0.00000562\n 3  2021 Ameyalin  F         1 0.00000562\n 4  2021 Ameyalli  F         1 0.00000562\n 5  2021 Amiel     F         1 0.00000562\n 6  2021 Amien     M         1 0.00000562\n 7  2021 Amillaray F         1 0.00000562\n 8  2021 Amin      M         1 0.00000562\n 9  2021 Amina     F         1 0.00000562\n10  2021 Amirha    F         1 0.00000562\n# ℹ 8,577 more rows"
  },
  {
    "objectID": "slides/clase-3/clase_3_presentación.html#función-slice-4",
    "href": "slides/clase-3/clase_3_presentación.html#función-slice-4",
    "title": "Introducción a Tidyverse",
    "section": "Función slice() (4)",
    "text": "Función slice() (4)\nCon slice_sample se puede seleccionar una muestra aleatoria de casos, ya sea indicando con el argumento n o con prop.\n\ndata |&gt; slice_sample(n = 1) # Un caso al azar\n\n# A tibble: 1 × 5\n   anio nombre sexo      n proporcion\n  &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt; &lt;dbl&gt;      &lt;dbl&gt;\n1  2014 Amin   M         1 0.00000397\n\n\n\ndata |&gt; slice_sample(prop = 0.01) # Una muestra del 1% al azar\n\n# A tibble: 8,587 × 5\n    anio nombre    sexo      n proporcion\n   &lt;dbl&gt; &lt;chr&gt;     &lt;chr&gt; &lt;dbl&gt;      &lt;dbl&gt;\n 1  2002 Janluis   M         1 0.00000411\n 2  1938 Lieschen  F         1 0.00000999\n 3  2001 Yanderin  F         1 0.00000398\n 4  2011 Katthya   F         1 0.00000402\n 5  2006 Myllen    F         1 0.00000429\n 6  1932 Galatea   F         1 0.0000122 \n 7  1981 Jhuliano  M         1 0.00000315\n 8  2020 Adeline   F        38 0.000195  \n 9  2012 Arian     M         6 0.0000246 \n10  1945 Belladina F         2 0.0000126 \n# ℹ 8,577 more rows"
  },
  {
    "objectID": "slides/clase-3/clase_3_presentación.html#función-count",
    "href": "slides/clase-3/clase_3_presentación.html#función-count",
    "title": "Introducción a Tidyverse",
    "section": "Función count()",
    "text": "Función count()\nCuenta las observaciones únicas en una o más variables. Por ejemplo, si quisieramos saber cuántos casos hay por año.\n\ndata |&gt; count(anio)\n\n# A tibble: 102 × 2\n    anio     n\n   &lt;dbl&gt; &lt;int&gt;\n 1  1920  2028\n 2  1921  3094\n 3  1922  3241\n 4  1923  3344\n 5  1924  3526\n 6  1925  3544\n 7  1926  3649\n 8  1927  3902\n 9  1928  4511\n10  1929  4531\n# ℹ 92 more rows"
  },
  {
    "objectID": "slides/clase-3/clase_3_presentación.html#section-3",
    "href": "slides/clase-3/clase_3_presentación.html#section-3",
    "title": "Introducción a Tidyverse",
    "section": "",
    "text": "IV. Aplicación"
  },
  {
    "objectID": "slides/clase-3/clase_3_presentación.html#aplicación-1",
    "href": "slides/clase-3/clase_3_presentación.html#aplicación-1",
    "title": "Introducción a Tidyverse",
    "section": "Aplicación (1)",
    "text": "Aplicación (1)"
  },
  {
    "objectID": "slides/clase-3/clase_3_presentación.html#aplicación-2",
    "href": "slides/clase-3/clase_3_presentación.html#aplicación-2",
    "title": "Introducción a Tidyverse",
    "section": "Aplicación (2)",
    "text": "Aplicación (2)\n¿Cómo han evolucionado los nombres María y Sofía a lo largo del tiempo?\nPrimero instalaremos y cargaremos algunos paquetes.\nFuentes:\n\nOpción 1: paquete showtext.\nOpción 2: paquete extrafont.\n\nPara descargar una fuente específica pueden usar todas las de libre uso disponibles en Google Fonts.\n\nif (!require(showtext)) install.packages(\"showtext\")\nif (!require(extrafont)) install.packages(\"extrafont\")\nlibrary(showtext) # Paquete para llamar fuentes desde google\nlibrary(ggplot2) # Visualización de datos\nlibrary(extrafont) # Instala fuentes del sistema en R\nfont_add_google(\"Noto Sans\")\nfont_add_google(\"Montserrat\")\n\n\n# Importa todos los archivos .ttf de tu sistema\n# Se ejecuta una vez, pero demora\nfont_import()\n# Cargar todas las fuentes\nloadfonts(device = \"win\", quiet = TRUE) # Método para Windows"
  },
  {
    "objectID": "slides/clase-3/clase_3_presentación.html#aplicación-3",
    "href": "slides/clase-3/clase_3_presentación.html#aplicación-3",
    "title": "Introducción a Tidyverse",
    "section": "Aplicación (3)",
    "text": "Aplicación (3)\n\ndata |&gt; filter(nombre == \"María\" & sexo == \"F\") |&gt;\n  ggplot(aes(x = anio, y = proporcion)) +\n  geom_line(size = 1, colour = \"#0bb4ff\") +\n  geom_area(alpha = 0.3, fill = \"#0bb4ff\") +\n  scale_x_continuous(breaks = seq(min(data$anio), max(data$anio), by = 10)) + \n  scale_y_continuous(labels = scales::percent) +\n  annotate(\"text\", x = 2000, y = 0.05, size = 5,\n          label = \"La proporción \\n va a la baja\", color = \"black\") +\n  labs(title = \"Popularidad del nombre Sofía entre 1920 - 2021\", x = NULL, y = NULL,\n       caption = \"Datos 1920 - 2021 según Registro Civil e Identificación.\") +\n   theme(text = element_text(family = \"Noto Sans\"),\n        plot.title = element_text(color = \"#0bb4ff\", face = \"bold\"),\n        plot.caption = element_text(size = 8, face = \"italic\", color = \"azure4\"))"
  },
  {
    "objectID": "slides/clase-3/clase_3_presentación.html#aplicación-4",
    "href": "slides/clase-3/clase_3_presentación.html#aplicación-4",
    "title": "Introducción a Tidyverse",
    "section": "Aplicación (4)",
    "text": "Aplicación (4)\n\ndata |&gt; filter(nombre == \"Sofía\" & sexo == \"F\") |&gt;\n  ggplot(aes(x = anio, y = proporcion)) +\n  geom_line(size = 1, colour = \"#f46a9b\") +\n  geom_area(alpha = 0.3, fill = \"#f46a9b\") +\n  scale_x_continuous(breaks = seq(min(data$anio), max(data$anio), by = 10)) +\n  scale_y_continuous(labels = scales::percent) +\n  labs(title = \"Popularidad del nombre Sofía entre 1920 - 2021\", x = NULL, y = NULL,\n       caption = \"Datos 1920 - 2021 según Registro Civil e Identificación.\") +\n  theme_classic() +\n  theme(text = element_text(family = \"Montserrat\"),\n        plot.title = element_text(color = \"#f46a9b\", face = \"bold\"),\n        plot.caption = element_text(size = 8, face = \"italic\", color = \"azure4\"))"
  },
  {
    "objectID": "slides/clase-3/clase_3_presentación.html#section-4",
    "href": "slides/clase-3/clase_3_presentación.html#section-4",
    "title": "Introducción a Tidyverse",
    "section": "",
    "text": "V. Ejercicio"
  },
  {
    "objectID": "slides/clase-3/clase_3_presentación.html#ejercicio",
    "href": "slides/clase-3/clase_3_presentación.html#ejercicio",
    "title": "Introducción a Tidyverse",
    "section": "Ejercicio",
    "text": "Ejercicio\nUsando el conjunto de datos de guaguas responda lo siguiente:\n\n¿Hay alguna persona que se llame “Nicki” o “Nicky”?\n¿Cuáles son los tres nombres más populares para las personas inscritas en el año 2021?\n¿Cuántas personas con el nombre “Pedro” fueron inscritas entre 2015 - 2017 y el año 2020?\n¿Hay alguna persona que se llame “Ibai” antes de 2017?\n¿Cuántas personas con nombre Andrea y sexo registral masculino hay en el conjunto de datos?\nRealice su propia búsqueda. Debe cumplir al menos uno de los siguientes requisitos:\n\nIncluir uno o más años y uno o más nombres.\nRealizar una búsqueda con criterio de exclusión."
  },
  {
    "objectID": "slides/clase-3/clase_3_presentación.html#section-5",
    "href": "slides/clase-3/clase_3_presentación.html#section-5",
    "title": "Introducción a Tidyverse",
    "section": "",
    "text": "¡Gracias!  https://sirojasv.github.io/tsm_web/\n\n\n\n\n\n\nMetodología Cuantitativa - 2023"
  },
  {
    "objectID": "slides/clase-1/clase_1_presentación.html",
    "href": "slides/clase-1/clase_1_presentación.html",
    "title": "Introducción a R",
    "section": "",
    "text": "I. ¿Qué es R?\nII. ¿Por qué usar R?\nIII. Iniciando R\nIV. Bases de R\nV. Comentando Scripts"
  },
  {
    "objectID": "slides/clase-1/clase_1_presentación.html#contenidos",
    "href": "slides/clase-1/clase_1_presentación.html#contenidos",
    "title": "Introducción a R",
    "section": "Contenidos",
    "text": "Contenidos\nI. ¿Qué es R?\nII. ¿Por qué usar R?\nIII. Iniciando R\nIV. Bases de R\nV. Comentando Scripts"
  },
  {
    "objectID": "slides/clase-1/clase_1_presentación.html#section",
    "href": "slides/clase-1/clase_1_presentación.html#section",
    "title": "Introducción a R",
    "section": "",
    "text": "I. ¿Qué es R?"
  },
  {
    "objectID": "slides/clase-1/clase_1_presentación.html#qué-es-r-1",
    "href": "slides/clase-1/clase_1_presentación.html#qué-es-r-1",
    "title": "Introducción a R",
    "section": "¿Qué es R? (1)",
    "text": "¿Qué es R? (1)\n\n\n\nR es un lenguaje de programación para la computación estadística y la visualización creado por Robert Gentleman y Ross Ihaka, profesores de estadística de la Universidad de Auckland en Nueva Zelanda.\nTiene la ventaja de ser gratuito y libre.\nUna forma de contribuir al desarrollo de R es mediante la creación de un paquete.\nImplica escribir código, que es la manera que tenemos de comunicarnos con el lenguaje.\nLo usaremos a través del IDE RStudio."
  },
  {
    "objectID": "slides/clase-1/clase_1_presentación.html#section-1",
    "href": "slides/clase-1/clase_1_presentación.html#section-1",
    "title": "Introducción a R",
    "section": "",
    "text": "II. ¿Por qué usar R?"
  },
  {
    "objectID": "slides/clase-1/clase_1_presentación.html#por-qué-usar-r-caracteristicas-1",
    "href": "slides/clase-1/clase_1_presentación.html#por-qué-usar-r-caracteristicas-1",
    "title": "Introducción a R",
    "section": "¿Por qué usar R? Caracteristicas (1)",
    "text": "¿Por qué usar R? Caracteristicas (1)\n\nGratuito. A diferencia de otros softwares de ciencias sociales (v.g. SPSS) o el propio Excel.\nLibre. Permite que la comunidad introduzca nuevas funciones al software.\nPotencia. Permite articular de mejor forma el procesamiento, análisis, visualización y reportería de datos.\nCampo de aplicación. Estadística, negocios, ciencia de datos, ciencias naturales, etc.\n\nPero también tiene desventajas 🥺\n\nCurva de aprendizaje empinada.\nNo está pensado para ejecutar comandos por interfaz gráfica, lo que puede ser difícil para algunas personas."
  },
  {
    "objectID": "slides/clase-1/clase_1_presentación.html#por-qué-usar-r-crecimiento-2",
    "href": "slides/clase-1/clase_1_presentación.html#por-qué-usar-r-crecimiento-2",
    "title": "Introducción a R",
    "section": "¿Por qué usar R? Crecimiento (2)",
    "text": "¿Por qué usar R? Crecimiento (2)\nEl uso de R ha aumentado durante los últimos 15 años. Este fenómeno se ha replicado en las ciencias sociales."
  },
  {
    "objectID": "slides/clase-1/clase_1_presentación.html#section-2",
    "href": "slides/clase-1/clase_1_presentación.html#section-2",
    "title": "Introducción a R",
    "section": "",
    "text": "III. Iniciando R"
  },
  {
    "objectID": "slides/clase-1/clase_1_presentación.html#rstudio",
    "href": "slides/clase-1/clase_1_presentación.html#rstudio",
    "title": "Introducción a R",
    "section": "RStudio",
    "text": "RStudio\nAl abrir RStudio se encontrarán con tres paneles:\n\nLa Consola marcada por el recuadro color lila\nEl Enviroment o ambiente de trabajo en un color salmón\nLas Utilidades en color verde"
  },
  {
    "objectID": "slides/clase-1/clase_1_presentación.html#comenzar-un-script",
    "href": "slides/clase-1/clase_1_presentación.html#comenzar-un-script",
    "title": "Introducción a R",
    "section": "Comenzar un script",
    "text": "Comenzar un script\nLos comandos que ejecutaremos directamente en la consola no mantienen un registro, por lo que usaremos un Script de R para conservar el código. Para iniciar un Script tenemos dos alternativas:\n\nSeleccionar File → New File → R Script\nUsar el atajo de teclado CTRL/CMD + SHIFT + N\n\nLa forma más sencilla de utilizar R sería como una calculadora:\n\n# Esto es una suma\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "slides/clase-1/clase_1_presentación.html#atajos-relevantes-para-correr-scripts",
    "href": "slides/clase-1/clase_1_presentación.html#atajos-relevantes-para-correr-scripts",
    "title": "Introducción a R",
    "section": "Atajos relevantes para correr scripts",
    "text": "Atajos relevantes para correr scripts\n\nCTRL/CMD + ENTER → Ejecuta la línea que tienen seleccionada en el curso\nCTRL/CMD + SHIFT + ENTER → Ejecuta todo el código\nCTR/CMD + L → Limpia toda la consola de resultados de R\nCTRL/CMD + S → Guarda el script. Si este no tiene nombre, primero pedirá guardarlo en un directorio y asignarle nombre"
  },
  {
    "objectID": "slides/clase-1/clase_1_presentación.html#section-3",
    "href": "slides/clase-1/clase_1_presentación.html#section-3",
    "title": "Introducción a R",
    "section": "",
    "text": "IV. Bases de R"
  },
  {
    "objectID": "slides/clase-1/clase_1_presentación.html#cálculos-en-r",
    "href": "slides/clase-1/clase_1_presentación.html#cálculos-en-r",
    "title": "Introducción a R",
    "section": "Cálculos en R",
    "text": "Cálculos en R\nEs posible usar R como una calculadora. Las operaciones más utilizadas son las siguientes\n\n\n\n\nOperación\n\n\n\n\n+\nSuma\n\n\n-\nResta\n\n\n*\nMultiplicación\n\n\n/\nDivisión\n\n\n^\nPotencia\n\n\nsqrt\nRaíz cuadrada\n\n\nlog()\nLogaritmo base"
  },
  {
    "objectID": "slides/clase-1/clase_1_presentación.html#objetos-en-r",
    "href": "slides/clase-1/clase_1_presentación.html#objetos-en-r",
    "title": "Introducción a R",
    "section": "Objetos en R",
    "text": "Objetos en R\n\nEn R podemos crear objetos que guarden información o resultados. Para ello, se escribe el nombre y se les asigna los valores con el operador &lt;-.\nLos nombres permiten representar resultados de manera más fácil. Ejemplo:\n\nIngresamos tres notas y las dividimos por 3. Este resultado queda guardado en el objeto llamado “promedio”.\nLuego, si queremos ver el resultado, basta con llamar al objeto promedio.\nSi el nombre del objeto ya existe, se sobreescribirá su contenido.\n\n\n\n# Guardamos esta operación matemática en un objeto llamado \"promedio\"\n\npromedio &lt;- (5.5  + 3.8 + 6.1) / 3"
  },
  {
    "objectID": "slides/clase-1/clase_1_presentación.html#nombrar-objetos",
    "href": "slides/clase-1/clase_1_presentación.html#nombrar-objetos",
    "title": "Introducción a R",
    "section": "Nombrar objetos",
    "text": "Nombrar objetos\n\nEvite caracteres especiales como tildes, ñ, espacios, etc.\nConsistencia en los nombres de variables. Puede usar nomenclaturas como Snake Case donde los nombres se escriben en el formato “nombre_objeto” o Camel Case que sigue el estándar “NombreObjeto”.\nRecordar que R es sensible a mayúsculas y minúsculas. En el ejemplo anterior, definimos el objeto promedio. Si escribiéramos Promedio el software no lo reconocerá."
  },
  {
    "objectID": "slides/clase-1/clase_1_presentación.html#estructuras-de-datos",
    "href": "slides/clase-1/clase_1_presentación.html#estructuras-de-datos",
    "title": "Introducción a R",
    "section": "Estructuras de datos",
    "text": "Estructuras de datos\n\nR cuenta con clases y tipos de datos definidos de antemano, los cuales dependen de la información que contengan en su interior. Los comandos class y typeof sirven para preguntar el tipo de cada elemento.\nEn la siguiente tabla se muestran algunas de las clases más frecuentes en R.\n\n\n\n\n\n\n\n\n\n\nTipo\nDescripción\nEjemplo\n\n\n\n\ninteger\nNúmeros enteros\n-1, 0, 1\n\n\nnumeric\nNúmeros reales\n-0.5, 1/2, 1\n\n\ncharacter\nTexto/String\n“Erwin”, “Armin”, “Sasha”, “Titanes”\n\n\nfactor\nDatos categóricos\n“Trabajo Social [1]”, “Otra carrera [2]”\n\n\nhaven_labelled\nValores numéricos con etiquetas asociadas\n1 = “Muy en desacuerdo”; 2 = “En desacuerdo”; 3 “Ni de acuerdo ni en desacuerdo”; 4 = “De acuerdo”; 5 “Muy de acuerdo”\n\n\nlogical\nVerdadero o falso\n“TRUE”, “FALSE”"
  },
  {
    "objectID": "slides/clase-1/clase_1_presentación.html#vectores-1",
    "href": "slides/clase-1/clase_1_presentación.html#vectores-1",
    "title": "Introducción a R",
    "section": "Vectores (1)",
    "text": "Vectores (1)\nLos vectores son ordenamientos unidimensionales que solo pueden contener un tipo de dato. Se definen con el comando c().\nLos vectores tienen valores y además una posición (index) asociada a cada valor. Esta comienza desde el número 1 en adelante.\n\n\nv_numerico &lt;- c(1, 3, 5, 7, 9) # Vector que solo contiene números\nclass(v_numerico)\n\n[1] \"numeric\""
  },
  {
    "objectID": "slides/clase-1/clase_1_presentación.html#vectores-2",
    "href": "slides/clase-1/clase_1_presentación.html#vectores-2",
    "title": "Introducción a R",
    "section": "Vectores (2)",
    "text": "Vectores (2)\n\nUn vector solamente puede contener caracteres o solamente puede contener números. En los casos en que se produzca una mezcla, R realizará una transformación en los datos para que contengan solo un tipo de dato.\n\nCon el comando class() y typeof() se puede obtener información sobre los objetos\n\nclass() nos dirá de qué clase es el objeto. Para este curso, de preferencia usaremos este.\ntypeof() nos dirá el modo de almacenamiento de ese objeto.\n\n\nclass(v_numerico)\n\n[1] \"numeric\"\n\ntypeof(v_numerico)\n\n[1] \"double\""
  },
  {
    "objectID": "slides/clase-1/clase_1_presentación.html#vectores-3",
    "href": "slides/clase-1/clase_1_presentación.html#vectores-3",
    "title": "Introducción a R",
    "section": "Vectores (3)",
    "text": "Vectores (3)\n\nSi un vector contiene más de un tipo de dato, el programa forzará a que todos los datos sean del mismo tipo. Este proceso se conoce como coerción.\nNoten que si el texto está entre comillas, el programa lo reconocerá como un caracter.\n\n\nejemplo_character &lt;- \"Soy un character inocente\"\n\nclass(ejemplo_character)\n\n[1] \"character\"\n\ntypeof(ejemplo_character)\n\n[1] \"character\"\n\nv_char &lt;- c(40, \"50 años\", 33, \"33\") # Las comillas indican que es texto\n\n\n# ¿Y si comprobamos la clase del últio vector que generamos?\n\n# ¡Pregunta! ¿Por qué es de clase character?\nclass(v_char)\n\n[1] \"character\"\n\ntypeof(v_char)\n\n[1] \"character\""
  },
  {
    "objectID": "slides/clase-1/clase_1_presentación.html#vectores-4",
    "href": "slides/clase-1/clase_1_presentación.html#vectores-4",
    "title": "Introducción a R",
    "section": "Vectores (4)",
    "text": "Vectores (4)\nEs posible acceder a cualquier elemento de un vector a través de su posición usando la notación []1.\n\n\n\nRespondamos algunas preguntas:\n\n¿De qué tipo es este vector?\n¿Cuántos elementos o qué largo tiene este vector?\n¿Cómo puedo acceder al primer elemento del vector?\n¿Cómo puedo acceder a los dos primeros elementos del vector?\n¿Cómo puedo acceder a la última posición, sin saber su largo a priori?\n\nNota: si tienen problemas para escribirlos con el teclado, pueden usar ALT + 91 para [ y ALT + 93 para ]. Usualmente con solo escribir uno R debería autocompletar."
  },
  {
    "objectID": "slides/clase-1/clase_1_presentación.html#vectores-5",
    "href": "slides/clase-1/clase_1_presentación.html#vectores-5",
    "title": "Introducción a R",
    "section": "Vectores (5)",
    "text": "Vectores (5)\n\ndespedida &lt;- c(\"Eren\", \"Mikasa\", \"Armin\", \"Gracias por todo\",\n              \"Casi terminas :/\", \"Este 2023\")\n\nclass(despedida)\n\n[1] \"character\"\n\nlength(despedida)\n\n[1] 6\n\ndespedida[1]\n\n[1] \"Eren\"\n\ndespedida[1:2]\n\n[1] \"Eren\"   \"Mikasa\"\n\ndespedida[length(despedida)] # length es una función de R que entrega el largo de un vector\n\n[1] \"Este 2023\""
  },
  {
    "objectID": "slides/clase-1/clase_1_presentación.html#matrices-1",
    "href": "slides/clase-1/clase_1_presentación.html#matrices-1",
    "title": "Introducción a R",
    "section": "Matrices (1)",
    "text": "Matrices (1)\n\nLas matrices son estructuras bidimensionales, pues tienen filas y columnas, pero donde solo puede existir un tipo de dato. Se crean con el comando matrix(). Este comando sigue la siguiente estructura:\n\nmatrix(vector, nrow = n, ncol = m, byrow = FALSE)\n\nPrimero se especifican los datos de la matriz.\nLuego se especifica el número de filas.\nLuego se especifica el número de columnas.\nEl argumento byrow puede tomar dos valores. Si es FALSE, la matriz se llenará por columnas, es decir, completará una columna y luego continuará con los valores. Si el argumento es TRUE, se llenará por filas, es decir, completará una fila y luego pasará a la siguiente. El valor por defecto siempre es FALSE para esta función."
  },
  {
    "objectID": "slides/clase-1/clase_1_presentación.html#matrices-2",
    "href": "slides/clase-1/clase_1_presentación.html#matrices-2",
    "title": "Introducción a R",
    "section": "Matrices (2)",
    "text": "Matrices (2)\nEjemplo de llenado por columnas\n\nmatriz_1 &lt;- matrix(1:9, ncol = 3) # Llenado por columnas\nmatriz_1\n\n     [,1] [,2] [,3]\n[1,]    1    4    7\n[2,]    2    5    8\n[3,]    3    6    9\n\n\nEjemplo de llenado por filas\n\nmatriz_2 &lt;- matrix(1:9, ncol = 3, byrow = TRUE) # Llenado por filas\nmatriz_2\n\n     [,1] [,2] [,3]\n[1,]    1    2    3\n[2,]    4    5    6\n[3,]    7    8    9"
  },
  {
    "objectID": "slides/clase-1/clase_1_presentación.html#acceder-a-elementos",
    "href": "slides/clase-1/clase_1_presentación.html#acceder-a-elementos",
    "title": "Introducción a R",
    "section": "Acceder a elementos",
    "text": "Acceder a elementos\n\nEn R las matrices siempre siguen el orden (filas, columnas). Con esta lógica se puede seleccionar sus elementos: mi_matriz[i, j] ~ i = filas, j = columnas.\n\nmi_matriz[i, ]: selecciona la fila i-ésima de la matriz.\nmi_matriz[, j]: selecciona la columna j-ésima de la matriz.\nmi_matriz[i, j]: selecciona el j-ésimo elemento de la i-ésima fila\n\n\nRealicemos un ejemplo con la matriz_2\n\nmatriz_2[1, 1] # Estoy seleccionando la fila 1 columna 1\n\n[1] 1\n\nmatriz_2[2, 1] # Estoy seleccionando la fila 2 columna 1\n\n[1] 4\n\nmatriz_2[1, ] # Estoy seleccionando a toda la fila 1\n\n[1] 1 2 3\n\nmatriz_2[3, ] # Estoy seleccionando a toda la fila 3\n\n[1] 7 8 9\n\nmatriz_2[, 1] # Estoy seleccionando a toda la columna 1\n\n[1] 1 4 7"
  },
  {
    "objectID": "slides/clase-1/clase_1_presentación.html#dataframe-y-tibble-1",
    "href": "slides/clase-1/clase_1_presentación.html#dataframe-y-tibble-1",
    "title": "Introducción a R",
    "section": "Dataframe y tibble (1)",
    "text": "Dataframe y tibble (1)\nEn R los dataframe son arreglos de datos bidimensionales (filas y columnas), pero que permiten distintos tipos de datos.\nEs el caso usual de datos estructurados que se ven en los cursos de análisis de datos: las filas representan observaciones y las columnas variables.\nLos tibbles son muy similares a los dataframe, pero con mejoras de calidad de vida. La función proviene del paquete tidyverse.\nLos dataframes se generan a través de la función data.frame(), mientras que los tibbles con tibble().\nPara trabajar con tibbles, requeriremos un paso previo antes 😮"
  },
  {
    "objectID": "slides/clase-1/clase_1_presentación.html#instalación-de-paquetes",
    "href": "slides/clase-1/clase_1_presentación.html#instalación-de-paquetes",
    "title": "Introducción a R",
    "section": "Instalación de paquetes",
    "text": "Instalación de paquetes\n\nLos paquetes permiten agregar funciones adicionales a R. Para su instalación, debemos usar el comando install.packages(\"nombrepaquete\").\nSe debe tener mucho cuidado con especificar de manera correcta el comando, o arrojará error.\nPara utilizar el paquete ya instalado, en la sesión actual, se debe utilizar el comando library(\"nombrepaquete\").\nPrueben instalando y llamando el paquete tidyverse.\n\n\ninstall.packages(\"tidyverse\")\n\n\n# O un código más elegante, donde se instala solo si no lo tiene\n\nif (!require(\"tidyverse\")) install.packages(\"tidyverse\")\n\n\n# Cuando el paquete ya está instalado, se debe ejecutar library()\n\nlibrary(tidyverse)"
  },
  {
    "objectID": "slides/clase-1/clase_1_presentación.html#dataframe-y-tibble-2",
    "href": "slides/clase-1/clase_1_presentación.html#dataframe-y-tibble-2",
    "title": "Introducción a R",
    "section": "Dataframe y tibble (2)",
    "text": "Dataframe y tibble (2)\n\nEn los tibbles y dataframes uno también puede seleccionar directamente filas o columnas. Para ello, existen dos opciones:\nUsar la notación de $ para acceder a columnas específicas.\nUsar la notación de [[]] para acceder a columnas específicas.\nUsar la notación de matrices [i, j] para acceder a filas y columnas.\n\n\nnombre_base$nombre_variable\nnombre_base[i, j]\nnombre_base[[]]"
  },
  {
    "objectID": "slides/clase-1/clase_1_presentación.html#generando-un-tibble-1",
    "href": "slides/clase-1/clase_1_presentación.html#generando-un-tibble-1",
    "title": "Introducción a R",
    "section": "Generando un tibble (1)",
    "text": "Generando un tibble (1)\nPara este ejemplo crearemos tres vectores y luego los guardaremos como un tibble.\n\nnombre &lt;- c(\"Constanza\", \"Sofia\", \"Gonzalo\")\ncarrera &lt;- c(\"Ingeniería\", \"Administración\", \"Arqueología\")\ngen &lt;- c(2013, 2018, 2023)\n\n\n# Generando una base de datos con comando data.frame\ndata_estudiantes_df &lt;- data.frame(nombre, carrera, gen)\n\ndata_estudiantes_df\n\n     nombre        carrera  gen\n1 Constanza     Ingeniería 2013\n2     Sofia Administración 2018\n3   Gonzalo    Arqueología 2023\n\n# Generando una base de datos con comando tibble\n\nif (!require(\"tidyverse\")) install.packages(\"tidyverse\")\n# Con este código el programa instalará el paquete\n# solo si no lo tiene\n\nlibrary(tidyverse)"
  },
  {
    "objectID": "slides/clase-1/clase_1_presentación.html#generando-un-tibble-2",
    "href": "slides/clase-1/clase_1_presentación.html#generando-un-tibble-2",
    "title": "Introducción a R",
    "section": "Generando un tibble (2)",
    "text": "Generando un tibble (2)\n\ndata_estudiantes_tb &lt;- tibble(nombre, carrera, gen)\n\ndata_estudiantes_tb\n\n# A tibble: 3 × 3\n  nombre    carrera          gen\n  &lt;chr&gt;     &lt;chr&gt;          &lt;dbl&gt;\n1 Constanza Ingeniería      2013\n2 Sofia     Administración  2018\n3 Gonzalo   Arqueología     2023\n\n# Con el comando View() con la primera en mayúscula, verán este tibble en RStudio.\n\nView(data_estudiantes_tb)"
  },
  {
    "objectID": "slides/clase-1/clase_1_presentación.html#acceder-a-elementos-del-tibble-1",
    "href": "slides/clase-1/clase_1_presentación.html#acceder-a-elementos-del-tibble-1",
    "title": "Introducción a R",
    "section": "Acceder a elementos del tibble (1)",
    "text": "Acceder a elementos del tibble (1)\n\ndata_estudiantes_tb$nombre # accedemos a la columna nombre con $. Esto devuelve un vector\n\n[1] \"Constanza\" \"Sofia\"     \"Gonzalo\"  \n\ndata_estudiantes_tb[\"nombre\"] # accedemos a la columna nombre con []. Esto devuelve un tibble\n\n# A tibble: 3 × 1\n  nombre   \n  &lt;chr&gt;    \n1 Constanza\n2 Sofia    \n3 Gonzalo  \n\ndata_estudiantes_tb[[\"nombre\"]] # accedemos a la columna nombre con[[]] Esto devuelve un vector\n\n[1] \"Constanza\" \"Sofia\"     \"Gonzalo\"  \n\ndata_estudiantes_tb[[1]] # accedemos a la columna nombre con notación por posición [[]]\n\n[1] \"Constanza\" \"Sofia\"     \"Gonzalo\""
  },
  {
    "objectID": "slides/clase-1/clase_1_presentación.html#acceder-a-elementos-del-tibble-2",
    "href": "slides/clase-1/clase_1_presentación.html#acceder-a-elementos-del-tibble-2",
    "title": "Introducción a R",
    "section": "Acceder a elementos del tibble (2)",
    "text": "Acceder a elementos del tibble (2)\n\ndata_estudiantes_tb[1, \"nombre\"] # accedemos a la fila 1 de la columna nombre\n\n# A tibble: 1 × 1\n  nombre   \n  &lt;chr&gt;    \n1 Constanza\n\ndata_estudiantes_tb[1:2, \"nombre\"] # accedemos a la fila 1 y 2 de la columna nombre\n\n# A tibble: 2 × 1\n  nombre   \n  &lt;chr&gt;    \n1 Constanza\n2 Sofia    \n\ndata_estudiantes_tb[[3, 1]] # Accedemos a la columna 3, fila 1\n\n[1] \"Gonzalo\"\n\ndata_estudiantes_tb[1,] # Accedemos a toda la fila 1\n\n# A tibble: 1 × 3\n  nombre    carrera      gen\n  &lt;chr&gt;     &lt;chr&gt;      &lt;dbl&gt;\n1 Constanza Ingeniería  2013\n\ndata_estudiantes_tb[1,3] # Accedemos a la fila 1 columna 3\n\n# A tibble: 1 × 1\n    gen\n  &lt;dbl&gt;\n1  2013"
  },
  {
    "objectID": "slides/clase-1/clase_1_presentación.html#acceder-a-elementos-del-tibble-3",
    "href": "slides/clase-1/clase_1_presentación.html#acceder-a-elementos-del-tibble-3",
    "title": "Introducción a R",
    "section": "Acceder a elementos del tibble (3)",
    "text": "Acceder a elementos del tibble (3)\nAcceder de manera negativa o excluyendo elementos\n\ndata_estudiantes_tb[, -c(1)] # accedemos a todas las columnas menos nombre, por posición\n\n# A tibble: 3 × 2\n  carrera          gen\n  &lt;chr&gt;          &lt;dbl&gt;\n1 Ingeniería      2013\n2 Administración  2018\n3 Arqueología     2023\n\ndata_estudiantes_tb[, -c(1:2)] # accedemos a todas las columnas menos la 1 y la 2\n\n# A tibble: 3 × 1\n    gen\n  &lt;dbl&gt;\n1  2013\n2  2018\n3  2023\n\ndata_estudiantes_tb[, names(data_estudiantes_tb) != \"nombre\"] # accedemos a todas las columnas menos nombre\n\n# A tibble: 3 × 2\n  carrera          gen\n  &lt;chr&gt;          &lt;dbl&gt;\n1 Ingeniería      2013\n2 Administración  2018\n3 Arqueología     2023"
  },
  {
    "objectID": "slides/clase-1/clase_1_presentación.html#acceder-a-elementos-del-tibble-4",
    "href": "slides/clase-1/clase_1_presentación.html#acceder-a-elementos-del-tibble-4",
    "title": "Introducción a R",
    "section": "Acceder a elementos del tibble (4)",
    "text": "Acceder a elementos del tibble (4)\nAcceder de manera negativa o excluyendo elementos\n\ndata_estudiantes_tb[, !names(data_estudiantes_tb) %in% c(\"nombre\", \"carrera\")]\n\n# A tibble: 3 × 1\n    gen\n  &lt;dbl&gt;\n1  2013\n2  2018\n3  2023"
  },
  {
    "objectID": "slides/clase-1/clase_1_presentación.html#seccionar-un-script",
    "href": "slides/clase-1/clase_1_presentación.html#seccionar-un-script",
    "title": "Introducción a R",
    "section": "Seccionar un script",
    "text": "Seccionar un script\nSe puede establecer un orden de títulos y subtítulos que ordenen el script mediante el siguiente esquema:\n\n# y cuatro guiones medios indican una sección.\n## y cuatro guiones medios indican una subsección anidada a la sección.\n### y cuatro guiones medios indican una sub-subsección.\n\n\n# Proceso 1 ----\n\n## Subproceso 1.1 ----\n\n### Sub-subproceso 1.1.1 ----\n\nPara ver la barra de navegación utilizamos el atajo CTRL/CMD + SHIFT + O."
  },
  {
    "objectID": "slides/clase-1/clase_1_presentación.html#guardar-un-script",
    "href": "slides/clase-1/clase_1_presentación.html#guardar-un-script",
    "title": "Introducción a R",
    "section": "Guardar un script",
    "text": "Guardar un script\n\nSi queremos guardar este script, tenemos tres alternativas:\n\nSeleccionar el ícono de disquette que está sobre el script.\nIr a File → Save.\nUsar el atajo CTRL/CMD + S.\n\nPor último, tener en cuenta que RStudio cuenta con autocompletado y un diagnóstico de errores (aparecerá un ícono con una marca roja en forma de “x” en la línea donde hay problemas)."
  },
  {
    "objectID": "slides/clase-1/clase_1_presentación.html#section-4",
    "href": "slides/clase-1/clase_1_presentación.html#section-4",
    "title": "Introducción a R",
    "section": "",
    "text": "¡Gracias!  https://sirojasv.github.io/tsm_web/\n\n\n\n\n\n\nMetodología Cuantitativa - 2023"
  },
  {
    "objectID": "notes/clase_2_notas/clase_2_notas.html#introducción",
    "href": "notes/clase_2_notas/clase_2_notas.html#introducción",
    "title": "Notas clase 2: Tipos y Estructuras de datos en R",
    "section": "Introducción",
    "text": "Introducción\nLos dataframes y tibbles son estructuras de datos en que cada columna o variable corresponde a un vector, estos últimos siempre conteniendo un solo tipo de dato. Esto permite aplicar funciones que están disponibles para los vectores.\nSi bien hay funciones que son comunes independiente del tipo de vector, hay otras que están disponibles según sea el tipo de dato. Por ejemplo, funciones para vectores numeric, character, factor, etc.\n\n\n\n\n\n\nNota\n\n\n\nLas funciones que se presentan a continuación son las disponibles en R “base”, es decir, aquellas nativas del lenguaje. En las próximas sesiones se verán las funciones disponibles a través del paquete tidyverse.\nHay al menos dos razones por las que es necesario conocer sobre las funciones de R base.\n\nHay conceptos y funciones de R base que son transversales, independiente del paquete que estemos usando.\nDurante nuestro trabajo nos puede interactuar con personas que conozcan solo R base o realicen operaciones mezclando R base junto con otras librerías.\n\nCabe mencionar que el listado que se presenta a continuación no es exhaustivo. La cantidad de funciones disponibles en R base supera ampliamente los alcances de este curso."
  },
  {
    "objectID": "notes/clase_2_notas/clase_2_notas.html#conjunto-de-datos",
    "href": "notes/clase_2_notas/clase_2_notas.html#conjunto-de-datos",
    "title": "Notas clase 2: Tipos y Estructuras de datos en R",
    "section": "\n1 Conjunto de datos",
    "text": "1 Conjunto de datos\nUsaremos la función tibble() del paquete tibble, que forma parte de tidyverse. Esto también podría haberse realizado usando la función data.frame(), el cual es nativo de R.\n\n\n\n\n\n\nTip\n\n\n\nEn R es posible llamar a un paquete sin la necesidad de cargarlo con library(). Para ello, se debe escribir el nombre del paquete, seguido dos puntos : y luego se especifica la función de ese paquete que se desea llamar paquete::funcion.\nEn el código que se presenta más adelante, se está llamando del paquete tibble a la función tibble(). Algunos elementos que se debe tener en cuenta:\n\nEs útil cuando queremos acceder a una función de un paquete por una o pocas veces, sin la necesidad de cargarlo.\nHay paquetes que pueden tener funciones con el mismo nombre, lo que genera ciertos conflictos. Especificar directamente el paquete desde el cual se está llamando a esa función evita o disminuye ese problema (que de igual forma tiene solución).\nSi el paquete no está cargado, el llamado se debe hacer cada vez que se desee usar una de sus funciones.\n\n\n\nCrearemos un conjunto de datos de estudiantes de talleres de música con la siguiente información.\n\n\nnombre: primer nombre.\n\napellido: primer apellido.\n\nedad: edad en años.\n\nppa: promedio ponderado acumulado.\n\npais: país de nacionalidad del estudiante.\n\n\nestudiantes &lt;- tibble::tibble(\n  nombre = c(\"Ismael\", \"Andrea\", \"Ernesto\",\n             \"Daniela\", \"David\", \"Magdalena\",\n             \"Santiago\"),\n  apellido = c(\"Fernández\", \"Pérez\", \"Leal\",\n               \"Núñez\", \"Espinoza\", \"Madrid\",\n               \"Vergara\"),\n  edad = c(29, 45, 79,\n           18, 63, 80,\n           35),\n  ppa = c(5.75, 6.12, 5.06,\n          6.12, 4.73, 5.24,\n          4.94),\n  region = c(\"Región Metropolitana\", \"Región de La Araucanía\", \n             \"Región de Arica y Parinacota\", \"Región de Valparaíso\", \n             \"Región Metropolitana\", \"Región del Ñuble\",\n             \"Región del Maule\"),\n  pais = c(\"Chile\") \n  # Como solo hay un único valor, R lo recicla para asigarlo a todos.\n  )\nestudiantes\n\n# A tibble: 7 × 6\n  nombre    apellido   edad   ppa region                       pais \n  &lt;chr&gt;     &lt;chr&gt;     &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;                        &lt;chr&gt;\n1 Ismael    Fernández    29  5.75 Región Metropolitana         Chile\n2 Andrea    Pérez        45  6.12 Región de La Araucanía       Chile\n3 Ernesto   Leal         79  5.06 Región de Arica y Parinacota Chile\n4 Daniela   Núñez        18  6.12 Región de Valparaíso         Chile\n5 David     Espinoza     63  4.73 Región Metropolitana         Chile\n6 Magdalena Madrid       80  5.24 Región del Ñuble             Chile\n7 Santiago  Vergara      35  4.94 Región del Maule             Chile"
  },
  {
    "objectID": "notes/clase_2_notas/clase_2_notas.html#explorar",
    "href": "notes/clase_2_notas/clase_2_notas.html#explorar",
    "title": "Notas clase 2: Tipos y Estructuras de datos en R",
    "section": "\n2 Explorar",
    "text": "2 Explorar\nLas siguientes funciones permiten explorar un conjunto de datos:\n\n\ndim(): muestra las dimensiones, es decir, el número de filas y columnas. Si se desea saber solamente las filas o columnas, se puede emplear nrow o ncol respectivamente.\n\nstr(): muestra la estructrura del conjunto de datos.\n\nnames(): muestra los nombres de las columnas.\n\nsummary(): entrega estadísticas de resumen para cada columna.\n\nhead(): muestra las primeras n filas. Con el argumento x se puede especificar el número de filas. Si no se indica, mostrará 6.\n\ntail(): muestra las últimas n filas. Con el argumento x se puede especificar el número de filas. Si no se indica, mostrará 6.\n\nView(): muestra el conjunto de datos en otra ventana.\n\n\ndim(estudiantes) \n\n[1] 7 6\n\nstr(estudiantes)\n\ntibble [7 × 6] (S3: tbl_df/tbl/data.frame)\n $ nombre  : chr [1:7] \"Ismael\" \"Andrea\" \"Ernesto\" \"Daniela\" ...\n $ apellido: chr [1:7] \"Fernández\" \"Pérez\" \"Leal\" \"Núñez\" ...\n $ edad    : num [1:7] 29 45 79 18 63 80 35\n $ ppa     : num [1:7] 5.75 6.12 5.06 6.12 4.73 5.24 4.94\n $ region  : chr [1:7] \"Región Metropolitana\" \"Región de La Araucanía\" \"Región de Arica y Parinacota\" \"Región de Valparaíso\" ...\n $ pais    : chr [1:7] \"Chile\" \"Chile\" \"Chile\" \"Chile\" ...\n\nnames(estudiantes)\n\n[1] \"nombre\"   \"apellido\" \"edad\"     \"ppa\"      \"region\"   \"pais\"    \n\nsummary(estudiantes)\n\n    nombre            apellido              edad            ppa       \n Length:7           Length:7           Min.   :18.00   Min.   :4.730  \n Class :character   Class :character   1st Qu.:32.00   1st Qu.:5.000  \n Mode  :character   Mode  :character   Median :45.00   Median :5.240  \n                                       Mean   :49.86   Mean   :5.423  \n                                       3rd Qu.:71.00   3rd Qu.:5.935  \n                                       Max.   :80.00   Max.   :6.120  \n    region              pais          \n Length:7           Length:7          \n Class :character   Class :character  \n Mode  :character   Mode  :character  \n                                      \n                                      \n                                      \n\nhead(estudiantes, n = 2)\n\n# A tibble: 2 × 6\n  nombre apellido   edad   ppa region                 pais \n  &lt;chr&gt;  &lt;chr&gt;     &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;                  &lt;chr&gt;\n1 Ismael Fernández    29  5.75 Región Metropolitana   Chile\n2 Andrea Pérez        45  6.12 Región de La Araucanía Chile\n\ntail(estudiantes, n = 2)\n\n# A tibble: 2 × 6\n  nombre    apellido  edad   ppa region           pais \n  &lt;chr&gt;     &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;            &lt;chr&gt;\n1 Magdalena Madrid      80  5.24 Región del Ñuble Chile\n2 Santiago  Vergara     35  4.94 Región del Maule Chile"
  },
  {
    "objectID": "notes/clase_2_notas/clase_2_notas.html#procesar",
    "href": "notes/clase_2_notas/clase_2_notas.html#procesar",
    "title": "Notas clase 2: Tipos y Estructuras de datos en R",
    "section": "\n3 Procesar",
    "text": "3 Procesar\n\n3.1 Crear, modificar o eliminar variables\nPara eliminar variables existen múltiples modos. Veremos dos:\n\nUsando la función subset(), que retorna un subconjunto de datos a partir de una selección. Esta tiene un argumento llamado select que permite indicar columnas. Las columnas también se pueden indicar en sentido negativo usando el signo menos - (i.e. todas menos las indicadas con signo negativo).\nAccediendo a través del nombre de las variables usando la notación [].\n\n\n# Forma 1\nestudiantes &lt;- subset(estudiantes, select = -pais)\nestudiantes\n\n# A tibble: 7 × 5\n  nombre    apellido   edad   ppa region                      \n  &lt;chr&gt;     &lt;chr&gt;     &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;                       \n1 Ismael    Fernández    29  5.75 Región Metropolitana        \n2 Andrea    Pérez        45  6.12 Región de La Araucanía      \n3 Ernesto   Leal         79  5.06 Región de Arica y Parinacota\n4 Daniela   Núñez        18  6.12 Región de Valparaíso        \n5 David     Espinoza     63  4.73 Región Metropolitana        \n6 Magdalena Madrid       80  5.24 Región del Ñuble            \n7 Santiago  Vergara      35  4.94 Región del Maule            \n\n\n\n\n\n\n\n\nTip\n\n\n\nEs importante notar que en el código de arriba se está sobreescribiendo el objeto estudiantes para que contenga la nueva información (i.e. el conjunto sin la columna país). Este proceso ocurre porque se está creando el objeto estudiantes &lt;-, el cual ya existe.\n\nSobreescribir un objeto permite ahorrar memoria y guardar las operaciones realizadas.\nEn vez de sobreescribir, podría asignarse a un nuevo objeto. Por ejemplo: estudiantes_1 &lt;- subset(estudiantes, select = -pais) crearía un objeto llamado estudiantes_1 que contendría la operación realizada sobre estudiantes, pero sin modificar el original.\n\n\n\n\n# Forma 2\nestudiantes[, names(estudiantes) != \"pais\"] # Accedemos a los nombres que no sean \"pais\"\n\n# A tibble: 7 × 5\n  nombre    apellido   edad   ppa region                      \n  &lt;chr&gt;     &lt;chr&gt;     &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;                       \n1 Ismael    Fernández    29  5.75 Región Metropolitana        \n2 Andrea    Pérez        45  6.12 Región de La Araucanía      \n3 Ernesto   Leal         79  5.06 Región de Arica y Parinacota\n4 Daniela   Núñez        18  6.12 Región de Valparaíso        \n5 David     Espinoza     63  4.73 Región Metropolitana        \n6 Magdalena Madrid       80  5.24 Región del Ñuble            \n7 Santiago  Vergara      35  4.94 Región del Maule            \n\n\nPara añadir o modificar variables hay múltiples formas. A continuación se presentan dos.\n\nUsando el operador $.\nUsando la notación [].\n\nPara el conjunto de datos que ya teníamos se agregarán las siguientes variables:\n\n\nserie_fav: serie favorita indicada por la persona.\n\nmusica_fav: género de música favorito indicado por la persona.\n\n\n# Forma 1\nestudiantes$serie_fav &lt;- c(\"Game of Thrones\", \"Los Soprano\", \"Breaking Bad\",\n                           \"Breaking Bad\", \"Dark\", \"Los 80\", \"The Boys\")\n\n\n# Forma 2\nestudiantes[\"musica_fav\"] &lt;- c(\"Metal\", \"Reggeaton\", \"Trap\",\n                                \"Música Clásica\", \"Ranchera\", \"Pop\", \"Jazz\")\n\n\n# Forma 2, pero creando a partir de una variable ya existente\n# Para sobreescribir, tendría que llamarla en la izquierda con el mismo nombre\nestudiantes[\"edad_mas_1\"] &lt;- estudiantes$edad + 1\n\nCon las modificaciones realizadas el dataframe quedaría así:\n\nestudiantes\n\n# A tibble: 7 × 8\n  nombre    apellido   edad   ppa region         serie_fav musica_fav edad_mas_1\n  &lt;chr&gt;     &lt;chr&gt;     &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;          &lt;chr&gt;     &lt;chr&gt;           &lt;dbl&gt;\n1 Ismael    Fernández    29  5.75 Región Metrop… Game of … Metal              30\n2 Andrea    Pérez        45  6.12 Región de La … Los Sopr… Reggeaton          46\n3 Ernesto   Leal         79  5.06 Región de Ari… Breaking… Trap               80\n4 Daniela   Núñez        18  6.12 Región de Val… Breaking… Música Cl…         19\n5 David     Espinoza     63  4.73 Región Metrop… Dark      Ranchera           64\n6 Magdalena Madrid       80  5.24 Región del Ñu… Los 80    Pop                81\n7 Santiago  Vergara      35  4.94 Región del Ma… The Boys  Jazz               36\n\n\n\n3.2 Combinar archivos\nA veces se contará con dos o más conjuntos de datos que se requieren combinar. Algunos escenarios donde podría ocurrir esto son los siguientes:\n\nSi se tienen más observaciones para un conjunto de datos ya existentes. En este ejemplo, si hubiera información para más estudiantes.\nSi se tiene más información para un conjunto de datos ya existente. Por ejemplo, si se obtuviera más información para los estudiantes.\n\nLas funciones más básicas de R base que permiten esto son las siguientes:\n\n\nrbind: combina dataframes/tibbles a partir de columnas.\n\ncbind: combina dataframes/tibbles a partir de columnas.\n\n\n\n\n\n\n\nImportante\n\n\n\nPara que estas operaciones funcionen los dos dataframes deben tener las mismas dimensiones. Si no existiera dato para algún caso, se debe rellenar con NA.\n\n\n\n# Definimos otro dataframe que uniremos\nfilas &lt;- tibble::tibble(\n  nombre = c(\"Pilar\", \"Julio\"),\n  apellido = c(\"Farías\", \"Martínez\"),\n  edad = c(52, NA),\n  ppa = c(6.5, 5.14),\n  region = c(\"Región de Antofagasta\", \"Región Metropolitana\"),\n  serie_fav = NA,\n  musica_fav = c(\"Trap\", \"Hip hop\"),\n  edad_mas_1 = edad + 1\n  )\n\nestudiantes &lt;- rbind(estudiantes, filas)\nestudiantes\n\n# A tibble: 9 × 8\n  nombre    apellido   edad   ppa region         serie_fav musica_fav edad_mas_1\n  &lt;chr&gt;     &lt;chr&gt;     &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;          &lt;chr&gt;     &lt;chr&gt;           &lt;dbl&gt;\n1 Ismael    Fernández    29  5.75 Región Metrop… Game of … Metal              30\n2 Andrea    Pérez        45  6.12 Región de La … Los Sopr… Reggeaton          46\n3 Ernesto   Leal         79  5.06 Región de Ari… Breaking… Trap               80\n4 Daniela   Núñez        18  6.12 Región de Val… Breaking… Música Cl…         19\n5 David     Espinoza     63  4.73 Región Metrop… Dark      Ranchera           64\n6 Magdalena Madrid       80  5.24 Región del Ñu… Los 80    Pop                81\n7 Santiago  Vergara      35  4.94 Región del Ma… The Boys  Jazz               36\n8 Pilar     Farías       52  6.5  Región de Ant… &lt;NA&gt;      Trap               53\n9 Julio     Martínez     NA  5.14 Región Metrop… &lt;NA&gt;      Hip hop            NA\n\n\n\ncolumnas &lt;- tibble::tibble(\n  carrera = c(\"Trabajo Social\",\n              \"Ingeniería\",\n              \"Construcción Civil\",\n              \"Sociología\",\n              \"Estadística\",\n              \"Ciencia de Datos\",\n              \"Odontología\",\n              \"Letras\",\n              NA))\n\nestudiantes &lt;- cbind(estudiantes, columnas)\nestudiantes\n\n     nombre  apellido edad  ppa                       region       serie_fav\n1    Ismael Fernández   29 5.75         Región Metropolitana Game of Thrones\n2    Andrea     Pérez   45 6.12       Región de La Araucanía     Los Soprano\n3   Ernesto      Leal   79 5.06 Región de Arica y Parinacota    Breaking Bad\n4   Daniela     Núñez   18 6.12         Región de Valparaíso    Breaking Bad\n5     David  Espinoza   63 4.73         Región Metropolitana            Dark\n6 Magdalena    Madrid   80 5.24             Región del Ñuble          Los 80\n7  Santiago   Vergara   35 4.94             Región del Maule        The Boys\n8     Pilar    Farías   52 6.50        Región de Antofagasta            &lt;NA&gt;\n9     Julio  Martínez   NA 5.14         Región Metropolitana            &lt;NA&gt;\n      musica_fav edad_mas_1            carrera\n1          Metal         30     Trabajo Social\n2      Reggeaton         46         Ingeniería\n3           Trap         80 Construcción Civil\n4 Música Clásica         19         Sociología\n5       Ranchera         64        Estadística\n6            Pop         81   Ciencia de Datos\n7           Jazz         36        Odontología\n8           Trap         53             Letras\n9        Hip hop         NA               &lt;NA&gt;\n\n\n\n3.3 Ordenar dataframe\nLa función order() permite ordenar las columnas de un vector. Generalmente usaremos alguna variable para hacer esta operación.\n\nEn el caso de variables numéricas, el orden estará dado dado por su valor.\nEn el caso de las variables de tipo caracter, el orden por defecto será alfabético.\n\n\n# Dentro del paréntesis cuadrado lo que está antes de la coma opera sobre las filas\n# Luego, en la parte de las columnas no hay nada, pues se seleccionan todas\nestudiantes &lt;- estudiantes[order(estudiantes$edad), ]\nestudiantes\n\n     nombre  apellido edad  ppa                       region       serie_fav\n4   Daniela     Núñez   18 6.12         Región de Valparaíso    Breaking Bad\n1    Ismael Fernández   29 5.75         Región Metropolitana Game of Thrones\n7  Santiago   Vergara   35 4.94             Región del Maule        The Boys\n2    Andrea     Pérez   45 6.12       Región de La Araucanía     Los Soprano\n8     Pilar    Farías   52 6.50        Región de Antofagasta            &lt;NA&gt;\n5     David  Espinoza   63 4.73         Región Metropolitana            Dark\n3   Ernesto      Leal   79 5.06 Región de Arica y Parinacota    Breaking Bad\n6 Magdalena    Madrid   80 5.24             Región del Ñuble          Los 80\n9     Julio  Martínez   NA 5.14         Región Metropolitana            &lt;NA&gt;\n      musica_fav edad_mas_1            carrera\n4 Música Clásica         19         Sociología\n1          Metal         30     Trabajo Social\n7           Jazz         36        Odontología\n2      Reggeaton         46         Ingeniería\n8           Trap         53             Letras\n5       Ranchera         64        Estadística\n3           Trap         80 Construcción Civil\n6            Pop         81   Ciencia de Datos\n9        Hip hop         NA               &lt;NA&gt;\n\n\nSi se desea que la función order() opere de manera descendente, se puede especificar el argumento decreasing con valor TRUE.\n\nestudiantes &lt;- estudiantes[order(estudiantes$edad, decreasing = TRUE), ]\nestudiantes\n\n     nombre  apellido edad  ppa                       region       serie_fav\n6 Magdalena    Madrid   80 5.24             Región del Ñuble          Los 80\n3   Ernesto      Leal   79 5.06 Región de Arica y Parinacota    Breaking Bad\n5     David  Espinoza   63 4.73         Región Metropolitana            Dark\n8     Pilar    Farías   52 6.50        Región de Antofagasta            &lt;NA&gt;\n2    Andrea     Pérez   45 6.12       Región de La Araucanía     Los Soprano\n7  Santiago   Vergara   35 4.94             Región del Maule        The Boys\n1    Ismael Fernández   29 5.75         Región Metropolitana Game of Thrones\n4   Daniela     Núñez   18 6.12         Región de Valparaíso    Breaking Bad\n9     Julio  Martínez   NA 5.14         Región Metropolitana            &lt;NA&gt;\n      musica_fav edad_mas_1            carrera\n6            Pop         81   Ciencia de Datos\n3           Trap         80 Construcción Civil\n5       Ranchera         64        Estadística\n8           Trap         53             Letras\n2      Reggeaton         46         Ingeniería\n7           Jazz         36        Odontología\n1          Metal         30     Trabajo Social\n4 Música Clásica         19         Sociología\n9        Hip hop         NA               &lt;NA&gt;"
  },
  {
    "objectID": "notes/clase_2_notas/clase_2_notas.html#variables-tipo-numéricas",
    "href": "notes/clase_2_notas/clase_2_notas.html#variables-tipo-numéricas",
    "title": "Notas clase 2: Tipos y Estructuras de datos en R",
    "section": "\n4 Variables tipo numéricas",
    "text": "4 Variables tipo numéricas\nR cuenta con una serie de funciones para obtener estadísticas de nuestras columnas cuyo tipo de dato sea numeric.\n\n\nmean(): retorna la media aritmética de la columna o variable.\n\nmedian(): retorna el valor de la mediana para la columna o variable.\n\nvar(): retorna la varianza para la columna o variable.\n\nsd(): retorna la desviación estándar para la columna o variable.\n\nmin(): devuelve el valor mínimo para la columna o variable.\n\nmax(): devuelve el valor máximo para la columna o variable.\n\nrange(): devuelve un vector que contiene el valor mínimo y máximo para la columna o variable. Para obtenerlo con valor único, se pueden restar o aplicar la función diff().\n\nquantile(): retorna el cuantil especificado para la variable o conjunto de datos, el cual se especifica con el argumento probs. Los cuantiles son valores que dividen los datos en partes iguales. Por ejemplo, el percentil 50, que corresponde a la mediana, nos dice el valor en que el 50% de los casos son menores o iguales que el percentil 50 y el 50% son mayores o iguales que el percentil 50.\n\nround(): redondea a la cantidad de digitos especificada en el argumento digits. Por defecto lo hará al entero más cercano. Hasta los valores 0.5 redondea hasta abajo y partir de ese valor redondea hacia arriba.\n\nceiling(): devuelve el próximo valor entero del número elegido. Siempre devolverá el entero posterior, salvo cuando el valor sea exacto.\n\ntrunc(): elimina los decimales sin redondear.\n\n\n\n\n\n\n\nAdvertencia\n\n\n\nEn R existe una función mode(), pero esta devuelve el modo en que está almacenado un objeto (p.e. numeric). Más adelante veremos cómo obtener la moda en R.\n\n\n\nmean(estudiantes$ppa)\n\n[1] 5.511111\n\nmedian(estudiantes$ppa)\n\n[1] 5.24\n\nvar(estudiantes$ppa)\n\n[1] 0.3909361\n\nsd(estudiantes$ppa)\n\n[1] 0.6252488\n\nrange(estudiantes$ppa)\n\n[1] 4.73 6.50\n\nmax(estudiantes$ppa)\n\n[1] 6.5\n\nmin(estudiantes$ppa)\n\n[1] 4.73\n\n\nEn caso de que haya valores perdidos en alguna variable numérica y se desee realizar alguna operación matemática, se debe especificar na.rm = TRUE.\n\nmean(estudiantes$edad) # Como tiene NA, retornará NA.\n\n[1] NA\n\nmean(estudiantes$edad, na.rm = TRUE)\n\n[1] 50.125\n\nsd(estudiantes$edad, na.rm = TRUE )\n\n[1] 22.76863\n\n\nPodemos redondear o truncar ese valor de la media, según sea necesario:\n\ntrunc(mean(estudiantes$edad, na.rm = TRUE))\n\n[1] 50\n\nround(mean(estudiantes$edad, na.rm = TRUE), digits = 2) # Dos decimales\n\n[1] 50.12\n\n\nY el valor entero que se encuentra más cercano a esa media es 51.\n\nceiling(mean(estudiantes$edad, na.rm = TRUE))\n\n[1] 51\n\n\nEn el caso de los cuantiles, en el siguiente ejemplo se pide el cuantil 0.10, que corresponde al percentil 10. Los resultados muestran que el 10% inferior tiene valores iguales o menores a 4.898 y el 90% superior de casos tiene un valor superior a 4.898.\n\nquantile(estudiantes$ppa, probs = 0.10)\n\n  10% \n4.898 \n\n\nSi se quisiera obtener esta información de manera resumida, la función summary() entregará parte de los resultados.\n\nsummary(estudiantes$ppa)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  4.730   5.060   5.240   5.511   6.120   6.500 \n\n\nSi se desea tener más resultados, podemos hacerlo empleando los conocimientos que tenemos sobre vectores:\n\nc(summary = summary(estudiantes$ppa), sd = sd(estudiantes$ppa))\n\n   summary.Min. summary.1st Qu.  summary.Median    summary.Mean summary.3rd Qu. \n      4.7300000       5.0600000       5.2400000       5.5111111       6.1200000 \n   summary.Max.              sd \n      6.5000000       0.6252488 \n\n\nSi quisiéramos obtener todas las medidas de tendencia central, dispersión y posición que nos interesan en una sola línea, una manera sencilla de hacerlo es a través de un vector.\n\nc(media = mean(estudiantes$ppa), \n  mediana = median(estudiantes$ppa),\n  devest = sd(estudiantes$ppa),\n  min = min(estudiantes$ppa),\n  max = max(estudiantes$ppa),\n  rango = diff(range(estudiantes$ppa)), # En este caso diff es equivalente a restar.\n  p10 = unname(quantile(estudiantes$ppa, prob = 0.10)),\n  p25 = unname(quantile(estudiantes$ppa, prob = 0.25)),\n  p75 = unname(quantile(estudiantes$ppa, prob = 0.75)),\n  p90 = unname(quantile(estudiantes$ppa, prob = 0.90))\n  )\n\n    media   mediana    devest       min       max     rango       p10       p25 \n5.5111111 5.2400000 0.6252488 4.7300000 6.5000000 1.7700000 4.8980000 5.0600000 \n      p75       p90 \n6.1200000 6.1960000 \n\n\n\n\n\n\n\n\nTip\n\n\n\nLa función unname() se emplea para eliminar el nombre que R asigna al vector al momento de calcular el cuantil. Si se ejecuta el código c(p10 = quantile(estudiantes$ppa, prob = 0.10)) notarán que el nombre queda como p10.10%."
  },
  {
    "objectID": "notes/clase_2_notas/clase_2_notas.html#variables-tipo-caracter-o-string",
    "href": "notes/clase_2_notas/clase_2_notas.html#variables-tipo-caracter-o-string",
    "title": "Notas clase 2: Tipos y Estructuras de datos en R",
    "section": "\n5 Variables tipo caracter o string",
    "text": "5 Variables tipo caracter o string\nLas cadenas de texto o strings también cuentan con sus propias funciones. Algunas de ellas son:\n\n\npaste(): concatena strings. Cuenta con el argumento sep para indicar el separador y el argumento collapse.\n\npaste0(): concatena strings. No tiene opción de especificar un separador. Es útil cuando se desea concatenar números que están como string.\n\nstrsplit(): separa strings. Cuenta con el argumento split para indicar qué criterio se usará para dividir los textos.\n\ntoupper(): convierte a mayúsculas.\n\ntolower(): convierte a minúsculas.\n\nnchar(): retorna el número de caracteres.\n\ngsub(): reemplaza texto siguiendo un patrón especificado.\n\ntrimws(): elimina los espacios en blanco al inicio y al final.\n\nSiguiendo con el conjunto de datos de estudiantes, dejaremos en una sola variable el nombre y el apellido, para luego eliminar esta última variable.\n\nestudiantes[\"nombre_apellido\"] &lt;- paste(estudiantes$nombre, estudiantes$apellido)\nestudiantes[, c(\"nombre\", \"apellido\")] &lt;- NULL \n# Con NULL eliminamos completamente la columna nombre.\n\nSi quisiéramos hacer la operación inversa, usamos la función strsplit().\n\n# En este caso al correr el código dará warning, pero no se preocupen\nestudiantes[c(\"nombre\", \"apellido\")] &lt;- do.call(\n  rbind, strsplit(estudiantes$nombre_apellido, split = \" \"))\n\n\n\n\n\n\n\nPrecaución\n\n\n\ndo.call() es una función más avanzada de R que no veremos en profundidad en este curso, pues se utiliza para ejecutar funciones con la estructura de datos de listas (que se presentará más adelante como material complementario). Para mayor información pueden revisar este enlace.\n\n\nAhora modificaremos el nombre y apellido a mayúscula.\n\nestudiantes[\"nombre\"] &lt;- toupper(estudiantes$nombre)\nestudiantes[\"apellido\"] &lt;- toupper(estudiantes$apellido)\n\n\n\n\n\n\n\nTip\n\n\n\n¿Y si quisiéramos realizar la operación de arriba en una sola línea?\nLa función lapply() permtie aplicar otra función sobre una lista o un vector. Hay dos argumentos que nos resultarán relevantes:\n\n\nX: indica el vector o la lista a la que se les aplicará la función.\n\nFUN: indica la función que se aplicará a cada elemento de X.\n\n¡En este caso ambos argumentos están en mayúsculas!\nEstas funciones también son más avanzadas y existen otros modos de aplicar estas operaciones de manera más eficiente. De todas formas, si alguien está interesado/a, puede revisar aquí.\n\n\n\nestudiantes[c(\"nombre\", \"apellido\")] &lt;- lapply(\n  X = estudiantes[c(\"nombre\", \"apellido\")], FUN = toupper)\nestudiantes\n\n  edad  ppa                       region       serie_fav     musica_fav\n6   80 5.24             Región del Ñuble          Los 80            Pop\n3   79 5.06 Región de Arica y Parinacota    Breaking Bad           Trap\n5   63 4.73         Región Metropolitana            Dark       Ranchera\n8   52 6.50        Región de Antofagasta            &lt;NA&gt;           Trap\n2   45 6.12       Región de La Araucanía     Los Soprano      Reggeaton\n7   35 4.94             Región del Maule        The Boys           Jazz\n1   29 5.75         Región Metropolitana Game of Thrones          Metal\n4   18 6.12         Región de Valparaíso    Breaking Bad Música Clásica\n9   NA 5.14         Región Metropolitana            &lt;NA&gt;        Hip hop\n  edad_mas_1            carrera  nombre_apellido    nombre  apellido\n6         81   Ciencia de Datos Magdalena Madrid MAGDALENA    MADRID\n3         80 Construcción Civil     Ernesto Leal   ERNESTO      LEAL\n5         64        Estadística   David Espinoza     DAVID  ESPINOZA\n8         53             Letras     Pilar Farías     PILAR    FARÍAS\n2         46         Ingeniería     Andrea Pérez    ANDREA     PÉREZ\n7         36        Odontología Santiago Vergara  SANTIAGO   VERGARA\n1         30     Trabajo Social Ismael Fernández    ISMAEL FERNÁNDEZ\n4         19         Sociología    Daniela Núñez   DANIELA     NÚÑEZ\n9         NA               &lt;NA&gt;   Julio Martínez     JULIO  MARTÍNEZ\n\n\nTambién podemos imprimir el número de caracteres que tiene cada nombre:\n\nnchar(estudiantes$nombre)\n\n[1] 9 7 5 5 6 8 6 7 5\n\n\nY podríamos combinar algunas funciones de strings para que se vea de mejor forma en consola:\n\nprint(paste(estudiantes$nombre, nchar(estudiantes$nombre), sep = \":\"))\n\n[1] \"MAGDALENA:9\" \"ERNESTO:7\"   \"DAVID:5\"     \"PILAR:5\"     \"ANDREA:6\"   \n[6] \"SANTIAGO:8\"  \"ISMAEL:6\"    \"DANIELA:7\"   \"JULIO:5\"    \n\n\n\n\n\n\n\n\nTip\n\n\n\nprint() retorna el objeto en la consola.\n\nEn general, no es necesario usar print(). Por ejemplo, en este documento hemos mostrado en consola el objeto estudiantes sin necesidad de usar esa función.\nNo obstante, print tiene algunas opciones de configuración que lo hacen útil en algunas ocasiones y además otorga mayor visibilidad sobre lo que se está realizando.\n\n\n\nAhora simplificaremos el texto presente en la variable region. Primero hay que observar el patrón:\n\nTodas comienzan con “Región”.\nAlgunas incluyen “Región de” y otras “Región del”.\n\nDeseamos cambiar esto para que solamente quede el nombre de la región. Por lo tanto, reemplazaremos los textos indicados arriba por un espacio vacío.\n\nestudiantes[\"region_clean\"] &lt;- gsub(\n  \"Región|Región de|Región del\", \"\", estudiantes$region)\nestudiantes$region_clean\n\n[1] \" Ñuble\"              \" Arica y Parinacota\" \" Metropolitana\"     \n[4] \" Antofagasta\"        \" La Araucanía\"       \" Maule\"             \n[7] \" Metropolitana\"      \" Valparaíso\"         \" Metropolitana\"     \n\n\nPero vemos que ahora tenemos espacios en blanco. Podemos quitarlos usando la función trimws(), que los eliminará al principio y al final de una cadena de caracteres.\n\nestudiantes[\"region_clean\"] &lt;- trimws(estudiantes$region_clean)\nestudiantes$region_clean\n\n[1] \"Ñuble\"              \"Arica y Parinacota\" \"Metropolitana\"     \n[4] \"Antofagasta\"        \"La Araucanía\"       \"Maule\"             \n[7] \"Metropolitana\"      \"Valparaíso\"         \"Metropolitana\""
  },
  {
    "objectID": "notes/clase_2_notas/clase_2_notas.html#factores",
    "href": "notes/clase_2_notas/clase_2_notas.html#factores",
    "title": "Notas clase 2: Tipos y Estructuras de datos en R",
    "section": "\n6 Factores",
    "text": "6 Factores\nLos factores son un tipo especial de dato en R para los datos categóricos. Estos se utilizan cuando tenemos un número reducido de categorías predefinidas, los cuales son denominados niveles o levels. Se definen utilizando el constructor factor().\nAlgunas de sus ventajas son:\n\nPermiten controlar el número de categorías válidas.\nMayor flexibilidad para ordenar los elementos del factor, lo que facilita su implementación en gráficos, entre otros.\n\nPara este ejemplo agregaremos una nueva variable al conjunto de datos denominada satisfaccion. Esta consta de cinco categorías las cuales son:\n\nMuy Insatisfecho/a.\nInsatisfecho/a.\nNi insatisfecho/a ni satisfecho/a.\nSatisfecho/a.\nMuy satisfecho/a.\n\n\nestudiantes$satisfaccion &lt;-  c(1, 3, 4, 5, 2, 6, 4, 5, 5) \n# Ingresamos 9 valores porque la data de estudiantes son 9\n\n# Son 8 valores porque se definió un valor 6 que no existe en el factor.\n\nestudiantes[\"satisfaccion\"] &lt;- factor(estudiantes$satisfaccion,\n            levels = c(1, 2, 3, 4, 5),\n            labels = c(\"Muy insatisfecho/a\", \"Insatisfecho/a\", \n                       \"Ni insatisfecho/a ni satisfecho/a\",\n                       \"Satisfecho/a\", \"Muy satisfecho/a\"))"
  },
  {
    "objectID": "notes/clase_2_notas/clase_2_notas.html#tablas",
    "href": "notes/clase_2_notas/clase_2_notas.html#tablas",
    "title": "Notas clase 2: Tipos y Estructuras de datos en R",
    "section": "\n7 Tablas",
    "text": "7 Tablas\n\n\n\n\n\n\nNota\n\n\n\nEsta sección pretende mostrar de manera sucinta y rápida la generación de tablas con R base. No vale la pena dedicarle mucho tiempo, pues existen paquetes que ofrecen opciones mucho más atractivas para formatear, visualizar y exportar tablas a distintos formatos.\n\n\nA partir de la variable de satisfacción creada, generaremos nuestra primera tabla de frecuencias. Las funciones relevantes para esto son las siguientes:\n\n\ntable(): permite crear tablas de frecuencia o contingencia mostrando sus frecuencias.\n\nprop.table(): calcula las proporciones de una tabla de frecuencia o contingencia.\n\n\ntable(estudiantes$satisfaccion)\n\n\n               Muy insatisfecho/a                    Insatisfecho/a \n                                1                                 1 \nNi insatisfecho/a ni satisfecho/a                      Satisfecho/a \n                                1                                 2 \n                 Muy satisfecho/a \n                                3 \n\ntable(estudiantes$satisfaccion, useNA = \"ifany\") \n\n\n               Muy insatisfecho/a                    Insatisfecho/a \n                                1                                 1 \nNi insatisfecho/a ni satisfecho/a                      Satisfecho/a \n                                1                                 2 \n                 Muy satisfecho/a                              &lt;NA&gt; \n                                3                                 1 \n\n# Si se especifica ifany, mostrará los NA.\n\nSi queremos obtener una tabla que incluya las proporciones.\n\nprop.table(table(estudiantes$satisfaccion)) \n\n\n               Muy insatisfecho/a                    Insatisfecho/a \n                            0.125                             0.125 \nNi insatisfecho/a ni satisfecho/a                      Satisfecho/a \n                            0.125                             0.250 \n                 Muy satisfecho/a \n                            0.375 \n\n\nY si queremos la tabla como porcentajes:\n\nround(prop.table(table(estudiantes$satisfaccion)) * 100, digits = 1)\n\n\n               Muy insatisfecho/a                    Insatisfecho/a \n                             12.5                              12.5 \nNi insatisfecho/a ni satisfecho/a                      Satisfecho/a \n                             12.5                              25.0 \n                 Muy satisfecho/a \n                             37.5 \n\n\nSi se desea que tenga los marginales podemos usar la función addmargins(). Además, con la función cat(), podemos modificar la forma en que se imprime en consola la tabla. En este caso, se indica que cada resultado debe ir separado por un salto de línea, el cual se especifica con \\n.\n\ntabla &lt;- addmargins(round(prop.table(table(estudiantes$satisfaccion)) * 100, digits = 1))\ncat(paste(names(tabla), tabla, sep = \": \"), sep = \"\\n\")\n\nMuy insatisfecho/a: 12.5\nInsatisfecho/a: 12.5\nNi insatisfecho/a ni satisfecho/a: 12.5\nSatisfecho/a: 25\nMuy satisfecho/a: 37.5\nSum: 100"
  },
  {
    "objectID": "notes/clase_2_notas/clase_2_notas.html#bonus-paquetes-cargados-e-información-de-sesión",
    "href": "notes/clase_2_notas/clase_2_notas.html#bonus-paquetes-cargados-e-información-de-sesión",
    "title": "Notas clase 2: Tipos y Estructuras de datos en R",
    "section": "\n8 Bonus: paquetes cargados e información de sesión",
    "text": "8 Bonus: paquetes cargados e información de sesión\nA continuación se presentan algunas funciones que pueden resultar útiles para obtener información sobre nuestra sesión de R o modificar el comportamiento por defecto del software:\n\n\noptions(): función cuyos argumentos permiten cambiar el comportamiento por defecto de R en una serie de opciones. Algunas de estas son:\n\n\nOut.Dec(): especifica el caracter para indicar decimales. Por defecto es el punto, pero se puede cambiar a la coma.\n\nscipen(): deshabilita la notación científica. Se especifica mediante un valor, usualmente el 999, aunque podría ser otro según lo que se requiera.\n\nmax.print(): modifica el número de líneas que pueden imprimirse en la consola. Por defecto es 99999. Por temas de rendimiento no se recomienda cambiarlo.\n\n\n\nsearch(): indica las librerías de R que están cargadas en la sesión.\n\nsessionInfo(): Entrega información sobre el sistema operativo, la versión de R utilizada, los paquetes cargados y su versión, entre otros.\n\n\noptions(OutDec = \",\", # Decimales se muestran con coma\n        scipen = 999) # Deshabilita notación científica\n\n\nsearch()\n\n[1] \".GlobalEnv\"        \"package:stats\"     \"package:graphics\" \n[4] \"package:grDevices\" \"package:utils\"     \"package:datasets\" \n[7] \"package:methods\"   \"Autoloads\"         \"package:base\"     \n\nsessionInfo()\n\nR version 4.3.1 (2023-06-16 ucrt)\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\nRunning under: Windows 11 x64 (build 22621)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=Spanish_Chile.utf8  LC_CTYPE=Spanish_Chile.utf8   \n[3] LC_MONETARY=Spanish_Chile.utf8 LC_NUMERIC=C                  \n[5] LC_TIME=Spanish_Chile.utf8    \n\ntime zone: America/Santiago\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nloaded via a namespace (and not attached):\n [1] digest_0.6.33     utf8_1.2.3        fastmap_1.1.1     xfun_0.40        \n [5] magrittr_2.0.3    glue_1.6.2        tibble_3.2.1      knitr_1.43       \n [9] pkgconfig_2.0.3   htmltools_0.5.6   rmarkdown_2.23    lifecycle_1.0.3  \n[13] cli_3.6.1         fansi_1.0.4       vctrs_0.6.3       compiler_4.3.1   \n[17] rstudioapi_0.15.0 tools_4.3.1       pillar_1.9.0      evaluate_0.21    \n[21] yaml_2.3.7        rlang_1.1.1       jsonlite_1.8.7    htmlwidgets_1.6.2"
  },
  {
    "objectID": "licenses.html",
    "href": "licenses.html",
    "title": "Licencia",
    "section": "",
    "text": "via GIPHY"
  },
  {
    "objectID": "header_class/header_clase_2.html",
    "href": "header_class/header_clase_2.html",
    "title": "Clase 2",
    "section": "",
    "text": "Ideas más importantes\n\n\n\n\nFunciones básicas para dataframes/tibbles.\nProfundizando en tipos de datos.\nFunciones disponibles según el tipo de dato.\nIntroducción a los factores."
  },
  {
    "objectID": "header_class/header_clase_2.html#presentación-de-la-clase",
    "href": "header_class/header_clase_2.html#presentación-de-la-clase",
    "title": "Clase 2",
    "section": "Presentación de la clase",
    "text": "Presentación de la clase\n\n\nDescargar presentación\n\nVuelve a la descripción del curso ⏎"
  },
  {
    "objectID": "header_class/header_clase_0.html",
    "href": "header_class/header_clase_0.html",
    "title": "Clase 0",
    "section": "",
    "text": "Ideas más importantes\n\n\n\n\nInstalación de R y RStudio\nPersonalización de RStudio\nUso de R en la nube"
  },
  {
    "objectID": "header_class/header_clase_0.html#presentación-de-la-clase",
    "href": "header_class/header_clase_0.html#presentación-de-la-clase",
    "title": "Clase 0",
    "section": "Presentación de la clase",
    "text": "Presentación de la clase\n\n\nDescargar presentación"
  },
  {
    "objectID": "header_class/header_clase_0.html#referencias",
    "href": "header_class/header_clase_0.html#referencias",
    "title": "Clase 0",
    "section": "Referencias",
    "text": "Referencias\n\nHands-On Programming with R: Write Your Own Functions and Simulations, Appendix: Installing R and RStudio. Click aquí ⏎\n\n\nVuelve a la descripción del curso ⏎"
  },
  {
    "objectID": "course-team.html#profesor",
    "href": "course-team.html#profesor",
    "title": "Equipo docente",
    "section": "Profesor",
    "text": "Profesor\n\nDaniella Leal Valenzuela      daleal@uc.cl\nDescripción:\nEl trabajo que desarrollo está vinculado con la aplicación de metodologías de investigación cuantitativa en el área de encuestas sociales y análisis estadístico. Dentro de mis temas de interés se cuenta el desarrollo de tecnologías y su impacto en el ámbito social, así como temas emergentes asociados con los desafíos del BigData en la sociedad contemporánea.\n   Áreas de interés:\nAnálisis de Datos, Big Data y Medios Digitales, Encuestas Sociales, Estadística Social, Metodología de la Investigación\n   Educación:\n\nSocióloga, Pontificia Universidad Católica de Chile.\nMagister en Sociología, Pontificia Universidad Católica de Chile.\n\nLa profesora estará a cargo de las cátedras en las que se impartirán los contenidos del curso relativos al diseño de investigación social, estadística descriptiva, estadística inferencial y análisis de regresión."
  },
  {
    "objectID": "course-team.html#ayudante",
    "href": "course-team.html#ayudante",
    "title": "Equipo docente",
    "section": "Ayudante",
    "text": "Ayudante\n\nSebastián Rojas Vergara       sirojas1@uc.cl      sirojasv\nTrabajo en las etapas del proceso de producción estadística en el marco de encuestas sociales a hogares, lo que involucra diseño de cuestionarion y su programación, validación de la información y análisis de datos. Además, me interesa muchísimo vincular el mundo de la programación con las ciencias sociales.\n   Áreas de interés:\nEncuestas Sociales, Metodología de la Investigación, Programación, Desigualdad, Opinión Pública y Videojuegos.\n   Educación:\n\nSociólogo, Pontificia Universidad Católica de Chile.\nMagister en Sociología, Pontificia Universidad Católica de Chile.\nDiplomado en Ciencia de Datos, Pontificia Universidad Católica de Chile.\nDiplomado Programación y Aplicaciones de Python, Pontificia Universidad Católica de Chile. (en curso)\n\nEl ayudante estará a cargo de la aplicación de los contenidos del curso en el software R."
  },
  {
    "objectID": "course-bib.html",
    "href": "course-bib.html",
    "title": "Bibliografía",
    "section": "",
    "text": "Wickham, H., Çetinkaya-Rundel, M & Grolemund, G (2023). R for Data Science (2e). Recurso disponible en https://r4ds.hadley.nz/. También está la primera versión en español disponible aquí.\nUrdinez, F., & Cruz, A. (2020). R for Political Data Science: A Practical Guide. CRC Press. Disponible en español aquí."
  },
  {
    "objectID": "course-bib.html#aprendizaje-de-r",
    "href": "course-bib.html#aprendizaje-de-r",
    "title": "Bibliografía",
    "section": "",
    "text": "Wickham, H., Çetinkaya-Rundel, M & Grolemund, G (2023). R for Data Science (2e). Recurso disponible en https://r4ds.hadley.nz/. También está la primera versión en español disponible aquí.\nUrdinez, F., & Cruz, A. (2020). R for Political Data Science: A Practical Guide. CRC Press. Disponible en español aquí."
  },
  {
    "objectID": "course-bib.html#textos-para-aprendizaje-de-métodos-cuantitativos",
    "href": "course-bib.html#textos-para-aprendizaje-de-métodos-cuantitativos",
    "title": "Bibliografía",
    "section": "Textos para aprendizaje de métodos cuantitativos",
    "text": "Textos para aprendizaje de métodos cuantitativos\nLlaudet, E. Imai, K. (2022). Data Analysis for Social Science: A Friendly and Practical Introduction.\nImai, K., Webb, N. (2018). Quantitative Social Science: An Introduction. También hay una versión del 2022, llamada “Quantitative Social Science: An Introduction in tidyverse”, pero no está disponible en la universidad."
  },
  {
    "objectID": "course-contact.html",
    "href": "course-contact.html",
    "title": "Contacto",
    "section": "",
    "text": "Las presentaciones relativas a R y las evaluaciones estarán en esta plataforma y en Canvas. Los videos de las clases solo estarán disponibles en Canvas.\nTendremos dos vías de comunicación:\n\nForos: podrán realizar consultas directamente desde la plataforma Canvas o en esta página web. Para publicar en esta página deben crearse una cuenta en hyphotesis. En la parte superior derecha de las páginas con los contenidos del curso la encontrarán.\nContacto vía correo: pueden hacer dudas o solicitar un horario de atención a sirojas1@uc.cl con copia a daleal@uc.cl."
  },
  {
    "objectID": "exams/trabajo_1/trabajo_1_tsm301.html#instrucciones",
    "href": "exams/trabajo_1/trabajo_1_tsm301.html#instrucciones",
    "title": "Trabajo 1",
    "section": "Instrucciones",
    "text": "Instrucciones\n\n\n\n\n\n\n¡Importante!\n\n\n\n\nEl ejercicio se realiza de manera individual.\nEl desarrollo de este ejercicio será entregado en formato Word (.docx).\nTambién será posible entregarlo mediante html usando Quarto, que es una herramienta para publicar documentos, artículos y presentaciones usando R. Para ello podrán contactar al correo sirojas1@uc.cl para apoyarlos en caso de que quieran hacerlo de este modo.\nSe deberá entregar por la plataforma Canvas el 06 de septiembre hasta las 22:00 horas. El nombre del documento debe ser “Trabajo 1 TSM_Apellido Nombre”.\nPara cualquier duda pueden es posible consultar las clases previas, preguntar por correo o escribir en el foro del curso."
  },
  {
    "objectID": "exams/trabajo_1/trabajo_1_tsm301.html#contexto",
    "href": "exams/trabajo_1/trabajo_1_tsm301.html#contexto",
    "title": "Trabajo 1",
    "section": "Contexto",
    "text": "Contexto\nPara este ejercicio de metodología de investigación se requiere leer los siguientes artículos y reportes:\n\nObservatorio del Envejecimiento (2022). Uso de Internet y Tecnologías de la Información y Comunicación en las Personas Mayores. Centro de Estudios de Vejez y Envejecimiento de la Pontificia Universidad Católica de Chile y Compañía de Seguros Confuturo.\nBennett, F., Contreras, D., Morales, M. (2020). Medidas disciplinarias y su vínculo con la deserción escolar en Chile. Serie de Documentos de Trabajo COES, Documento de trabajo Nº45, pp. 1-9.\n\nA partir de la lectura de estos documentos, responda las siguientes preguntas:"
  },
  {
    "objectID": "exams/trabajo_1/trabajo_1_tsm301.html#artículo-bennett-et-al.",
    "href": "exams/trabajo_1/trabajo_1_tsm301.html#artículo-bennett-et-al.",
    "title": "Trabajo 1",
    "section": "\n1 Artículo Bennett et al.",
    "text": "1 Artículo Bennett et al.\nRespecto del artículo, responda lo siguiente:\n\n¿Cuál es el tema de la investigación? ¿Cuál es el objetivo de la investigación? Puntaje: 1,0\nIndique cuál es la relación entre variables que buscan probar los autores. ¿Qué tipo de hipótesis es? Puntaje: 0,5\n\nEn la tabla 1 se presentan las siguientes variables. Indique el tipo y nivel de medición:\n\nDesertar en la educación.\nMedida disciplinaria.\nEdad.\nTipo de escuela.\nPromedio de notas.\n\n\n\nPuntaje: 0,5\n\n¿Cuáles son los principales resultados del estudio? Puntaje: 1,0"
  },
  {
    "objectID": "exams/trabajo_1/trabajo_1_tsm301.html#reporte-observatorio-del-envejecimiento-y-confuturo",
    "href": "exams/trabajo_1/trabajo_1_tsm301.html#reporte-observatorio-del-envejecimiento-y-confuturo",
    "title": "Trabajo 1",
    "section": "\n2 Reporte Observatorio del Envejecimiento y Confuturo",
    "text": "2 Reporte Observatorio del Envejecimiento y Confuturo\n\n¿Cuál es el tema de la investigación? ¿Cuál es el objetivo de la investigación? Puntaje: 1,0\nEn el artículo se presenta el concepto de “internet y tecnologías de la información y comunicación (TICS)”. Usando los resultados del texto, proponga al menos una dimensión y su indicador. Puntaje: 0,5\nEn la figura 1 del reporte se presenta el uso de internet por edad. A partir de esta información, elabore una hipótesis e indique de qué tipo es. Puntaje: 0,5\n\n¿Cuáles son los resultados de la investigación? Indique respecto de las personas mayores (60 años y más):\n\nUso de internet.\nUso de smartphones.\nRealización de videollamadas.\n\n\n\nA partir de los resultados que usted expuso, ¿es posible plantear que la edad es el factor explicativo de estas diferencias en el uso de internet y TICS? Puntaje: 1,0"
  },
  {
    "objectID": "header_class/header_clase_1.html",
    "href": "header_class/header_clase_1.html",
    "title": "Clase 1",
    "section": "",
    "text": "Ideas más importantes\n\n\n\n\nConcepto de “objeto” en R.\nEstructuras de datos: vectores, matrices, dataframes.\nInstalación de librerías o paquetes.\nBuenas prácticas para comentar código."
  },
  {
    "objectID": "header_class/header_clase_1.html#presentación-de-la-clase",
    "href": "header_class/header_clase_1.html#presentación-de-la-clase",
    "title": "Clase 1",
    "section": "Presentación de la clase",
    "text": "Presentación de la clase\n\n\nDescargar presentación\n\nVuelve a la descripción del curso ⏎"
  },
  {
    "objectID": "header_class/header_clase_3.html",
    "href": "header_class/header_clase_3.html",
    "title": "Clase 3",
    "section": "",
    "text": "Ideas más importantes\n\n\n\n\nPresentación de tidyverse.\nOperador |&gt;.\nFunciones del paquete dplyr.\nCondiciones lógicas."
  },
  {
    "objectID": "header_class/header_clase_3.html#presentación-de-la-clase",
    "href": "header_class/header_clase_3.html#presentación-de-la-clase",
    "title": "Clase 3",
    "section": "Presentación de la clase",
    "text": "Presentación de la clase\n\n\nDescargar presentación\n\nVuelve a la descripción del curso ⏎"
  },
  {
    "objectID": "notes/clase_1_notas/clase_1_notas.html#bases",
    "href": "notes/clase_1_notas/clase_1_notas.html#bases",
    "title": "Notas clase 1: Introducción a R",
    "section": "Bases",
    "text": "Bases\nEn el siguiente documento se presentan aspectos importanes sobre vectores y matrices, así como una introducción a los dataframes y tibbles.\nComenzaremos cargando el paquete tidyverse, el cual será necesario para llamar a la función tibble que se usará más adelante.\n\nlibrary(tidyverse)"
  },
  {
    "objectID": "notes/clase_1_notas/clase_1_notas.html#vectores",
    "href": "notes/clase_1_notas/clase_1_notas.html#vectores",
    "title": "Notas clase 1: Introducción a R",
    "section": "\n1 Vectores",
    "text": "1 Vectores\nLos vectores son arreglos unidimensionales que solo pueden contener un tipo de dato.\n\n1.1 Crear vectores\nLos vectores se definen escribiendo c(), que viene del inglés combine. Cada uno de los elementos del vector se indican separando por coma. Se puede crear un objeto para guardar ese vector asignándole un nombre seguido de &lt;-, como se muestra a continuación:\n\nnombre_objeto &lt;- c() # Adentro van los elementos del vector\n\nPor ejemplo, en los siguientes casos se definen tres vectores que corresponden a tres tipos de datos revisados en clases: numeric, character y logical. Estos cumplen con el requisito de tener solamente datos de un mismo tipo.\nVector con elementos de tipo numérico\n\n# Definiendo mi primer vector numérico\nv_numerico &lt;- c(1, 3, 5, 7, 9)\n\nAdemás, en el caso de los vectores numéricos se puede indicar una secuencia utilizando la notación de dos puntos :.\n\n# Entrega un vector con valores del 1 al 5\nv_numerico_1 &lt;- c(1:5)\nv_numerico_1 \n\n[1] 1 2 3 4 5\n\n\nO de igual forma se pueden combinar secuencias con números específicos y otra secuencia. Las secuencias pueden ser incrementales o decrementales.\n\n# Entrega un vector con valores del 1 al 5, 9 al 7 y el número 256\nv_numerico_2 &lt;- c(1:5, 9:7, 256)\nv_numerico_2 \n\n[1]   1   2   3   4   5   9   8   7 256\n\n\nVector con elementos de tipo caracter.\n\n# Definiendo mi primer vector de caracteres\nv_caracteres &lt;- c(\"Hola Magíster de Trabajo Social\", \"Año 2023\")\n\nVector con elementos de tipo lógico.\n\n# Definiendo mi primer vector logico\nv_logico &lt;- c(TRUE, FALSE, TRUE, FALSE, TRUE)\n\nSe puede comprobar que el elemento definido es un vector utilizando la función is.vector(). Esta recibe como argumento (lo que va dentro del paréntesis) el nombre del objeto. Si es un vector, retornará TRUE, y si no lo es, devolverá FALSE.\n\n# Comprobando que es un vector\nis.vector(v_numerico)\n\n[1] TRUE\n\n\nPara cualquier vector es posible obtener su largo, es decir, el número de elementos que contiene, usando la función length(). Esta función retornará el valor que corresponde al largo de ese vector.\nEn el caso del vector numérico de ejemplo, este consta de 5 elementos.\n\n# Obteniendo el largo del vector\nlength(v_numerico)\n\n[1] 5\n\n\nPodemos comprobar el tipo de dato del vector utilizando las funciones class() y typeof()\n\nLa función class() devuelve la clase del objeto.\nLa función typeof() determina el método interno que usa R para guardar ese objeto.\n\n\n# Comprobamos la clase del vector numérico\nclass(v_numerico)\n\n[1] \"numeric\"\n\ntypeof(v_numerico)\n\n[1] \"double\"\n\n# Comprobamos la clase del vector de caracteres\nclass(v_caracteres)\n\n[1] \"character\"\n\ntypeof(v_caracteres)\n\n[1] \"character\"\n\n# Comprobamos la clase del vector lógico\nclass(v_logico)\n\n[1] \"logical\"\n\ntypeof(v_logico)\n\n[1] \"logical\"\n\n\nLos vectores pueden elementos vacíos que se denotan como NA, que es un acrónimo de Not Available. Esto se utiliza para indicar la ausencia de un valor. Si el valor NA está definido en el vector, este contará como un elemento más.\n\n# Definiendo un vector numérico con NA\nv_numerico_na &lt;- c(5, 10, 33, 77, 101, 256, 5, NA, NA)\n\n\n# Definiendo un vector de caracteres con NA\nv_caracteres_na &lt;- c(\"Hola\", \"Primera Clase\", NA)\n\n\n# Definiendo un vector lógico con NA\nv_logico_na &lt;- c(TRUE, FALSE, NA)\n\n\nlength(v_numerico_na)\n\n[1] 9\n\nlength(v_caracteres_na)\n\n[1] 3\n\nlength(v_logico_na)\n\n[1] 3\n\n\n\n1.2 Acceso a elementos\nCada elemento de un vector tiene una posición asignada, comenzando desde el 1. Para acceder a la posición del vector indicaremos el nombre del vector, seguido de paréntesis cuadrados [] (i.e. nombre_objeto[]).\nPor ejemplo, podemos acceder al segundo elemento del vector numérico y del vector de caracteres.\n\n# Acceder a la segunda posición\nv_numerico[2]\n\n[1] 3\n\nv_caracteres[2]\n\n[1] \"Año 2023\"\n\n\nUtilizando el símbolo de dos puntos : se puede indicar un rango de posiciones del vector a las que se quiere acceder.\n\n# Acceder a las tres primeras posiciones del vector\nv_numerico[1:3]\n\n[1] 1 3 5\n\n\nDe igual forma, se pueden utilizar otras funciones de R para acceder a posiciones del vector. Por ejemplo, la función length() devuelve el largo de un vector (también funciona para otras estructuras de datos)\n\n# Accede siempre a la última posición sin conocer a priori su largo\nv_numerico[length(v_numerico)]\n\n[1] 9\n\n\nY si se quiere acceder a la penúltima posición, basta con obtener el largo del vector y restarle 1.\n\n# Accede siempre a la penúltima posición sin conocer a priori su largo.\nv_numerico[length(v_numerico) - 1]\n\n[1] 7\n\n\nEn caso de acceder a una posición que no esté definida, el programa indicará un valor vacío denonado por NA\n\n# Notar que en el vector definido no existe la posición 3\nv_caracteres[3]\n\n[1] NA\n\n\n\n1.3 Modificar o eliminar elementos\nDado un vector ya creado, es posible modificar o eliminar elementos de este. Si se desea eliminar, se debe anteponer un signo menos - indicando la posición que se quiere eliminar.\nEn el ejemplo a continuación definimos usando un vector usando la función seq, que corresponde a una secuencia que toma tres argumentos:\n\nfrom: indica el comienzo de la secuencia\nto: indica el final de la secuencia\nby: indica el incremento de la secuencia\n\n\nv_completo &lt;- seq(from = 10, to = 50, by = 10)\nv_completo \n\n[1] 10 20 30 40 50\n\n# Ahora eliminaremos el elemento que corresponda a la quinta posición\nv_cortado &lt;- v_completo[-4]\nv_cortado\n\n[1] 10 20 30 50\n\n\nY ahora modificaremos el valor 50 para que pase a ser 90.\n\n# Ahora al valor que corresponde a 50 le asignaremos el valor 90.\nv_cortado[v_cortado == 50] &lt;- 90\nv_cortado\n\n[1] 10 20 30 90\n\n\n\n\n\n\n\n\nNota\n\n\n\nExisten muchas más operaciones para vectores, como ordenarlos, reemplazar texto, generar reglas de reemplazo, etc. Estas se irán revisando a lo largo del curso con las funciones del paquete tidyverse()\n\n\n\n1.4 Combinar vectores\nSe pueden agregar elementos a un vector ya existente. Para ello, se puede emplear emplear la misma notación c():\n\n# Combinando vectores\n\nmi_vector &lt;- c(\"Los juegos\")\nmi_vector &lt;- c(mi_vector, \"del hambre\")\n# Notar que ahora este vector tiene dos elementos\nmi_vector\n\n[1] \"Los juegos\" \"del hambre\"\n\n\nTambién se pueden crear vectores que son combinaciones de vectores\n\n# Creando vectores a partir de combinaciones de vectores\nmi_vector_1 &lt;- c(1, 3, 5, 7)\nmi_vector_2 &lt;- c(2, 4, 6, 8)\nmi_vector_3 &lt;- c(mi_vector_1, mi_vector_2)\nmi_vector_3\n\n[1] 1 3 5 7 2 4 6 8\n\n\n\n1.5 Coerción\nCuando se crean o combinan vectores que tipos de datos diferentes, R realizará un proceso de coerción automáticamente. Es decir, buscará convertir los datos al tipo más flexible, siguiente unas reglas de jerarquía. El caso más simple es cuando se tienen datos de tipo numeric y character, donde el programa forzará a que los datos sean de este último tipo.\n\n# Al definirse tiene datos de distinto tipo\nmi_vector_coercion &lt;- c(40, \"50 años\", 33, \"33\") # Las comillas indican que es texto\n\n# Pero R genera una coerción\nclass(mi_vector_coercion)\n\n[1] \"character\"\n\n\n\n1.6 Operaciones con vectores\nTambién se pueden realizar operaciones matemáticas con los vectores, tales como sumas, multiplicaciones, restas, etc.\n\n# Multiplicar el vector por 2\nmi_vector_multiplicar &lt;- c(2, 4, 6) * 2\nmi_vector_multiplicar\n\n[1]  4  8 12\n\n\nComo se puede apreciar, la operación de multiplicar se está aplicando a cada uno de los elementos del vector.\nEsto nos introduce a un concepto de R conocido como vectorización. Esto quiere decir que hay operaciones que se aplican a cada uno de los elementos.\nLa vectorización funciona con otras estructuras de datos que veremos a lo largo del curso. Intuitivamente, bastará conocer que cuando una operación se puede vectorizar, su tiempo de ejecución es muy rápido.\n\n1.7 Reciclar vectores\nCuando dos vectores no tienen el mismo largo, R realizará un proceso que se conoce como reciclaje. Este consiste en que irá tomando cada uno de los valores del vector más corto para que operen con los elementos del vector que aún no tienen su “pareja”.\nEn el ejemplo que se presenta a continuación, se han sumado los valores del siguiente modo:\n\\[\n\\begin{gathered}\n\\ 2 + 4\n\\\\\n\\ 2 + 5\n\\\\\n\\text{Se acaban los valores del primer vector}\n\\\\\n\\ 2 + 6\n\\\\\n\\ 3 + 8\n\\\\\n\\text{Se recicla el valor 2 y 3 del primer vector}\n\\end{gathered}\n\\]\n\n# Vectores de distinto tipo\nv_largo2 &lt;- c(2, 3)\nv_largo3 &lt;- c(4, 5, 6, 8)\nv_largo_com &lt;- v_largo2 + v_largo3\nv_largo_com\n\n[1]  6  8  8 11"
  },
  {
    "objectID": "notes/clase_1_notas/clase_1_notas.html#matrices",
    "href": "notes/clase_1_notas/clase_1_notas.html#matrices",
    "title": "Notas clase 1: Introducción a R",
    "section": "\n2 Matrices",
    "text": "2 Matrices\nLas matrices son arreglos bidisimensionales que solo pueden contener un tipo de dato. Las matrices son una estructura con forma rectangular, formada por filas y columnas.\n\n2.1 Crear matrices\nSe definen escribiendo matrix(). Al menos cuatro argumentos nos resultarán relevantes de las matrices:\n\ndata: indica el vector de datos de la matriz\nnrow: indica el número de filas\nncol: indica el número de columnas\nbyrow: indica si el llenado es por filas o columnas. Por defecto viene en llenado por columnas.\n\nEjemplo de llenado por columnas\n\nmatriz_1 &lt;- matrix(1:9, ncol = 3) # Llenado por columnas\nmatriz_1\n\n     [,1] [,2] [,3]\n[1,]    1    4    7\n[2,]    2    5    8\n[3,]    3    6    9\n\n\nEjemplo de llenado por filas\n\nmatriz_2 &lt;- matrix(1:9, ncol = 3, byrow = TRUE) # Llenado por filas\nmatriz_2\n\n     [,1] [,2] [,3]\n[1,]    1    2    3\n[2,]    4    5    6\n[3,]    7    8    9\n\n\n\n2.2 Crear matriz a partir de vectores\nEs posible crear matrices a partir de la unión de vectores. Para ello se pueden usar las siguientes funciones:\n\n\ncbind que viene de column bind (unión por columnas) donde cada vector corresponde a una columna.\n\nrbind que viene de row bind (unión por filas)\n\nEjemplos:\n\nv_parte_1 &lt;- c(1:2)\nv_parte_2 &lt;- c(3:4)\nv_parte_3 &lt;- c(5:6)\nv_parte_4 &lt;- c(7:8)\n\nmatriz_columna &lt;- cbind(v_parte_1, v_parte_2, v_parte_3, v_parte_4)\nmatriz_columna\n\n     v_parte_1 v_parte_2 v_parte_3 v_parte_4\n[1,]         1         3         5         7\n[2,]         2         4         6         8\n\nmatriz_fila &lt;- rbind(v_parte_1, v_parte_2, v_parte_3, v_parte_4)\nmatriz_fila \n\n          [,1] [,2]\nv_parte_1    1    2\nv_parte_2    3    4\nv_parte_3    5    6\nv_parte_4    7    8\n\n\n\n2.3 Acceso a elementos\nEn R las matrices siempre siguen el orden (filas, columnas). Con esta lógica se puede seleccionar sus elementos:\n\\[\n\\begin{gathered}\n\\ \\text{matriz}[i,j]\n\\end{gathered}\n\\] \\[\n\\begin{aligned}\n\\text{Donde:}\n\\\\\n\\ \\text{matriz}[i,] = \\text{selecciona la \\textbf{fila} i-ésima de la matriz.}\n\\\\\n\\ \\text{matriz}[, j] = \\text{selecciona la \\textbf{columna} j-ésima de la matriz.}\n\\\\\n\\ \\text{matriz}[i, j] = \\text{selecciona el j-ésimo elemento de la i-ésima fila}\n\\end{aligned}\n\\]\nRealicemos un ejemplo con la matriz_2\n\nmatriz_2[1, 1] # Estoy seleccionando la fila 1 columna 1\n\n[1] 1\n\nmatriz_2[2, 1] # Estoy seleccionando la fila 2 columna 1\n\n[1] 4\n\nmatriz_2[1, ] # Estoy seleccionando a toda la fila 1\n\n[1] 1 2 3\n\nmatriz_2[3, ] # Estoy seleccionando a toda la fila 3\n\n[1] 7 8 9\n\nmatriz_2[, 1] # Estoy seleccionando a toda la columna 1\n\n[1] 1 4 7"
  },
  {
    "objectID": "notes/clase_1_notas/clase_1_notas.html#dataframes-y-tibbles",
    "href": "notes/clase_1_notas/clase_1_notas.html#dataframes-y-tibbles",
    "title": "Notas clase 1: Introducción a R",
    "section": "\n3 Dataframes y tibbles",
    "text": "3 Dataframes y tibbles\n\n3.1 Generando dataframes y tibbles\nEn R los dataframes son arreglos de datos bidimensionales (filas y columnas), pero que permiten distintos tipos de datos.\nEs el caso usual de datos estructurados que se ven en los cursos de análisis de datos: las filas representan observaciones y las columnas variables.\nLos tibbles son muy similares a los dataframe, pero con mejoras de calidad de vida. La función proviene del paquete tidyverse.\nLos dataframes se generan a través de la función data.frame(), mientras que los tibbles con tibble().\n\n# Se definen los vectores de datos\nnombre &lt;- c(\"Constanza\", \"Sofia\", \"Gonzalo\")\ncarrera &lt;- c(\"Ingeniería\", \"Administración\", \"Arqueología\")\ngen &lt;- c(2013, 2018, 2023)\n\n\n# Generando una base de datos con data.frame()\ndata_estudiantes_df &lt;- data.frame(nombre, carrera, gen)\ndata_estudiantes_df\n\n     nombre        carrera  gen\n1 Constanza     Ingeniería 2013\n2     Sofia Administración 2018\n3   Gonzalo    Arqueología 2023\n\n\n\n# Generando una base de datos con tibble()\ndata_estudiantes_tb &lt;- tibble(nombre, carrera, gen)\ndata_estudiantes_tb\n\n# A tibble: 3 × 3\n  nombre    carrera          gen\n  &lt;chr&gt;     &lt;chr&gt;          &lt;dbl&gt;\n1 Constanza Ingeniería      2013\n2 Sofia     Administración  2018\n3 Gonzalo   Arqueología     2023\n\n\n\n3.2 Acceder a elementos\nEn los tibbles y dataframes uno también puede seleccionar directamente filas o columnas. Para ello, existen dos opciones:\n\nUsar la notación de $ para acceder a columnas específicas.\nUsar la notación de [[]] para acceder a columnas específicas.\nUsar la notación de matrices [i, j] para acceder a filas y columnas.\n\n\nnombre_base$nombre_variable\nnombre_base[i, j]\nnombre_base[[]]\n\nEjemplos:\n\ndata_estudiantes_tb$nombre \n\n[1] \"Constanza\" \"Sofia\"     \"Gonzalo\"  \n\n# accedemos a la columna nombre con $. Esto devuelve un vector\ndata_estudiantes_tb[\"nombre\"] \n\n# A tibble: 3 × 1\n  nombre   \n  &lt;chr&gt;    \n1 Constanza\n2 Sofia    \n3 Gonzalo  \n\n# accedemos a la columna nombre con []. Esto devuelve un tibble\ndata_estudiantes_tb[[\"nombre\"]] \n\n[1] \"Constanza\" \"Sofia\"     \"Gonzalo\"  \n\n# accedemos a la columna nombre con[[]] Esto devuelve un vector\ndata_estudiantes_tb[[1]] \n\n[1] \"Constanza\" \"Sofia\"     \"Gonzalo\"  \n\n# accedemos a la columna nombre con notación por posición [[]]\n\n\ndata_estudiantes_tb[1, \"nombre\"] # accedemos a la fila 1 de la columna nombre\n\n# A tibble: 1 × 1\n  nombre   \n  &lt;chr&gt;    \n1 Constanza\n\ndata_estudiantes_tb[1:2, \"nombre\"] # accedemos a la fila 1 y 2 de la columna nombre\n\n# A tibble: 2 × 1\n  nombre   \n  &lt;chr&gt;    \n1 Constanza\n2 Sofia    \n\ndata_estudiantes_tb[[3, 1]] # Accedemos a la fila 3 para la columna 1. Retorna un vector\n\n[1] \"Gonzalo\"\n\ndata_estudiantes_tb[3, 1] # Accedemos a la fila 3 para la columna 1. Retorna un tibble\n\n# A tibble: 1 × 1\n  nombre \n  &lt;chr&gt;  \n1 Gonzalo\n\ndata_estudiantes_tb[1,] # Accedemos a toda la fila 1\n\n# A tibble: 1 × 3\n  nombre    carrera      gen\n  &lt;chr&gt;     &lt;chr&gt;      &lt;dbl&gt;\n1 Constanza Ingeniería  2013\n\ndata_estudiantes_tb[1,3] # Accedemos a la fila 1 columna 3\n\n# A tibble: 1 × 1\n    gen\n  &lt;dbl&gt;\n1  2013\n\n\n\ndata_estudiantes_tb[, -c(1)] # accedemos a todas las columnas menos nombre, por posición\n\n# A tibble: 3 × 2\n  carrera          gen\n  &lt;chr&gt;          &lt;dbl&gt;\n1 Ingeniería      2013\n2 Administración  2018\n3 Arqueología     2023\n\ndata_estudiantes_tb[, -c(1:2)] # accedemos a todas las columnas menos la 1 y la 2\n\n# A tibble: 3 × 1\n    gen\n  &lt;dbl&gt;\n1  2013\n2  2018\n3  2023\n\ndata_estudiantes_tb[, names(data_estudiantes_tb) != \"nombre\"] \n\n# A tibble: 3 × 2\n  carrera          gen\n  &lt;chr&gt;          &lt;dbl&gt;\n1 Ingeniería      2013\n2 Administración  2018\n3 Arqueología     2023\n\n# accedemos a todas las columnas menos nombre\n\n\ndata_estudiantes_tb[, !names(data_estudiantes_tb) %in% c(\"nombre\", \"carrera\")]\n\n# A tibble: 3 × 1\n    gen\n  &lt;dbl&gt;\n1  2013\n2  2018\n3  2023"
  },
  {
    "objectID": "slides/clase-0/clase_0_presentación.html",
    "href": "slides/clase-0/clase_0_presentación.html",
    "title": "Instalación R y RStudio",
    "section": "",
    "text": "En esta presentación encontrarán las instrucciones para instalar los softwares de R y RStudio en el marco de los cursos de Metodología Cuantitativa (TSM301) y Análisis de Regresión Múltiple (TMS302).\nAntes de comenzar, les presentamos un video de apenas un minuto del canal de Youtube Fazt Code para que conozcan más sobre este lenguaje de programación."
  },
  {
    "objectID": "slides/clase-0/clase_0_presentación.html#hola",
    "href": "slides/clase-0/clase_0_presentación.html#hola",
    "title": "Instalación R y RStudio",
    "section": "¡Hola🫡!",
    "text": "¡Hola🫡!\n\nEn esta presentación encontrarán las instrucciones para instalar los softwares de R y RStudio en el marco de los cursos de Metodología Cuantitativa (TSM301) y Análisis de Regresión Múltiple (TMS302).\nAntes de comenzar, les presentamos un video de apenas un minuto del canal de Youtube Fazt Code para que conozcan más sobre este lenguaje de programación."
  },
  {
    "objectID": "slides/clase-0/clase_0_presentación.html#instalación-de-r",
    "href": "slides/clase-0/clase_0_presentación.html#instalación-de-r",
    "title": "Instalación R y RStudio",
    "section": "Instalación de R",
    "text": "Instalación de R\n\n\nDeben dirigirse a la página https://cran.r-project.org/bin/windows/base/\nLuego, verán una pantalla como la que se presenta en esta imagen. Seleccionen “Download R-4.3.1 for Windows”.\nUna vez den click, comenzará la descarga de un archivo. Deben ejecutarlo y dar “siguiente” en todas las opciones.\nSi tienen otro sistema operativo, como MacOS, pueden dirigirse acá."
  },
  {
    "objectID": "slides/clase-0/clase_0_presentación.html#instalar-rstudio-i",
    "href": "slides/clase-0/clase_0_presentación.html#instalar-rstudio-i",
    "title": "Instalación R y RStudio",
    "section": "Instalar RStudio I",
    "text": "Instalar RStudio I\n\n\nDeben ingresar a https://posit.co/download/rstudio-desktop/\nLuego, deben seleccionar la opción “Install RStudio”. Esto iniciará una descarga, la que deben ejecutar una vez termine.\nEn caso de que el programa les pregunte por la versión de R, deben escoger la que está instalada en su computadora. Si aparece 32 o 64 bits, siempre seleccionen esta última."
  },
  {
    "objectID": "slides/clase-0/clase_0_presentación.html#instalar-rstudio-ii",
    "href": "slides/clase-0/clase_0_presentación.html#instalar-rstudio-ii",
    "title": "Instalación R y RStudio",
    "section": "Instalar RStudio II",
    "text": "Instalar RStudio II\n\n\nPara iniciar busquen en la lupa de sus computadores “RStudio”.\nFinalmente, verán una pantalla como la que se muestra a continuación:"
  },
  {
    "objectID": "slides/clase-0/clase_0_presentación.html#personalización-en-rstudio-i",
    "href": "slides/clase-0/clase_0_presentación.html#personalización-en-rstudio-i",
    "title": "Instalación R y RStudio",
    "section": "Personalización en RStudio I",
    "text": "Personalización en RStudio I\n\n\nTemas: Si quieren cambiar los colores del software deben realizar lo siguiente en el menú superior de RStudio: Tools → Global Options → Appearance → Editor Theme. Allí encontrarán varias opciones para escoger de acuerdo con su preferencia."
  },
  {
    "objectID": "slides/clase-0/clase_0_presentación.html#personalización-en-rstudio-ii",
    "href": "slides/clase-0/clase_0_presentación.html#personalización-en-rstudio-ii",
    "title": "Instalación R y RStudio",
    "section": "Personalización en RStudio II",
    "text": "Personalización en RStudio II\n\nAhora veremos algunos ajustes opcionales en RStudio. ¡Les recomendamos que las activen para que les sea más fácil el trabajo!\n\n\n\n\nAutoajuste: Tools → Global Options → Code → Editing → Activen opción \"Soft-wrap R source files\". Con esta opción el texto se ajustará automáticamente al ancho de su ventana\n\n\n\n\n\nParéntesis arcoíris: Tools → Global Options → Code → Display → Activen opción \"use rainbow parentheses\". En R estaremos usando paréntesis para llamar las funciones. Esta opción facilitará la visualización de los paréntesis y su pareo. Más información veremos en clases!"
  },
  {
    "objectID": "slides/clase-0/clase_0_presentación.html#correr-r-en-la-nube",
    "href": "slides/clase-0/clase_0_presentación.html#correr-r-en-la-nube",
    "title": "Instalación R y RStudio",
    "section": "Correr R en la nube",
    "text": "Correr R en la nube\n\nPara este curso les recomendamos completamente tener instalado R y RStudio en su computador. Sin embargo, por diferentes razones pueden necesitar utilizar R desde la nube. En las siguientes diapositivas se presentan dos opciones:\n\nRStudio Cloud\nGoogle Colab"
  },
  {
    "objectID": "slides/clase-0/clase_0_presentación.html#rstudio-cloud",
    "href": "slides/clase-0/clase_0_presentación.html#rstudio-cloud",
    "title": "Instalación R y RStudio",
    "section": "RStudio Cloud",
    "text": "RStudio Cloud\n\n\nDeben crearse una cuenta en https://login.rstudio.cloud/login.\nLuego les preguntará hacia dónde quieren dirigirse. Deben seleccionar “Posit Cloud”.\nEn el menú superior derecho, hacer click donde dice New Proyect → New RStudio Proyect\". Luego, se les generará un entorno virtual idéntico a que si instalaran RStudio."
  },
  {
    "objectID": "slides/clase-0/clase_0_presentación.html#google-colab",
    "href": "slides/clase-0/clase_0_presentación.html#google-colab",
    "title": "Instalación R y RStudio",
    "section": "Google Colab",
    "text": "Google Colab\n\nDeben iniciar sesión con una cuenta de Google en https://colab.research.google.com/.\n\nEn el menú superior izquierdo deben ir a Archivo → Nuevo Cuaderno\". Luego a Entorno de ejecución → Cambiar entorno de ejecución → Cambiar donde dice \"Python 3\" por \"R\".\nEn estos entornos tendrán celdas con código y celdas con texto 1.\nLas celdas se pueden iniciar con los botones y se ejecutan utilizando la combinación de teclado CTRL + ENTER\n\n\n\n\n\n\n\nEste entorno se los recomendamos para cuando tengan más clases del curso."
  },
  {
    "objectID": "slides/clase-0/clase_0_presentación.html#section",
    "href": "slides/clase-0/clase_0_presentación.html#section",
    "title": "Instalación R y RStudio",
    "section": "",
    "text": "¡Gracias! \n\n\n\n\n\n\nMetodología Cuantitativa - 2023"
  },
  {
    "objectID": "slides/clase-2/clase_2_presentación.html",
    "href": "slides/clase-2/clase_2_presentación.html",
    "title": "Tipos y estructuras de datos en R",
    "section": "",
    "text": "I. Clase anterior\nII. Tibbles\nIII. Tipos de datos"
  },
  {
    "objectID": "slides/clase-2/clase_2_presentación.html#contenidos",
    "href": "slides/clase-2/clase_2_presentación.html#contenidos",
    "title": "Tipos y estructuras de datos en R",
    "section": "Contenidos",
    "text": "Contenidos\nI. Clase anterior\nII. Tibbles\nIII. Tipos de datos"
  },
  {
    "objectID": "slides/clase-2/clase_2_presentación.html#section",
    "href": "slides/clase-2/clase_2_presentación.html#section",
    "title": "Tipos y estructuras de datos en R",
    "section": "",
    "text": "I. Clase anterior"
  },
  {
    "objectID": "slides/clase-2/clase_2_presentación.html#clase-anterior",
    "href": "slides/clase-2/clase_2_presentación.html#clase-anterior",
    "title": "Tipos y estructuras de datos en R",
    "section": "Clase anterior",
    "text": "Clase anterior\n\nConcepto de objeto en R.\nVectores, matrices, dataframes/tibbles.\nInstalación de paquetes.\nBuenas prácticas para comentar código."
  },
  {
    "objectID": "slides/clase-2/clase_2_presentación.html#glosario",
    "href": "slides/clase-2/clase_2_presentación.html#glosario",
    "title": "Tipos y estructuras de datos en R",
    "section": "Glosario",
    "text": "Glosario\n\n\n\n\n\n\n\n\nConcepto\nDescripción\n\n\n\n\nConsola\nLugar donde se puede escribir código y que retorna o “imprime” los resultados asociados a ese código.\n\n\nScript\nArchivo de texto o programa que incluye el código que queremos ejecutar.\n\n\nDirectorio de trabajo\nEn inglés working directory. Indica la ubicación de los archivos de entrada y salida.\n\n\nFunción\nConjunto de instrucciones que convierten las entradas o inputs en los resultados u outputs esperados. Las funciones tienen argumentos, que son las entradas que necesita o especificaciones para funcionar.\n\n\nPaquetes\nConjunto de funciones agrupadas y distribuidas mediante una librería diseñadas para temas específicos. Por ejemplo, paquetes para visualizar datos.\n\n\nVector\nUnidad básica de datos en R.\n\n\nDataframe o tibble\nTabla organizada mediante filas y columnas."
  },
  {
    "objectID": "slides/clase-2/clase_2_presentación.html#section-1",
    "href": "slides/clase-2/clase_2_presentación.html#section-1",
    "title": "Tipos y estructuras de datos en R",
    "section": "",
    "text": "II. Tibbles"
  },
  {
    "objectID": "slides/clase-2/clase_2_presentación.html#tibblesdataframes",
    "href": "slides/clase-2/clase_2_presentación.html#tibblesdataframes",
    "title": "Tipos y estructuras de datos en R",
    "section": "Tibbles/dataframes",
    "text": "Tibbles/dataframes\nUna característica relevante de los tibbles/dataframes es que cada columna o variable corresponde a un vector. Esto permite aplicar una serie de funciones que están disponibles para vectores, tales como:\n\n\nsum(): retorna la suma de elementos\nmean(): retorna la media aritmetica.\nmedian(): retorna la mediana.\nsd(): retorna la desviación estándar:\nmax(): retorna el valor máximo.\nmin(): retorna el valor mínimo.\nwhich.max(): retorna la posición del valor máximo.\nwhich.min(): retorna la posición del valor mínimo.\nrange(): retorna el rango.\nrev(): revierte el orden de los elementos.\nunique(): retorna la lista de elementos únicos.\nlength(): retorna el largo."
  },
  {
    "objectID": "slides/clase-2/clase_2_presentación.html#datos-de-ejemplo",
    "href": "slides/clase-2/clase_2_presentación.html#datos-de-ejemplo",
    "title": "Tipos y estructuras de datos en R",
    "section": "Datos de ejemplo:",
    "text": "Datos de ejemplo:\nUsaremos el paquete guaguas. Este contiene el primer nombre de los bebés registrados en Chile entre 1920 y 2021 según el Servicio de Registro Civil e Identificación.\n\n# Cargamos el paquete\nif (!require(\"guaguas\")) install.packages(\"guaguas\")\nlibrary(guaguas)\n\nLa base de datos contiene 858.782 observaciones para cinco variables, las cuales se describen a continuación:\n\n\n\n\n\n\n\n\nNombre\nDescripción\n\n\n\n\nanio\nAño de inscripción en el Servicio de Registro Civil e Identificación\n\n\nnombre\nPrimer nombre inscrito de la persona\n\n\nsexo\nSexo registral, con categorías “Femenino”, “Masculino” e “Indeterminado”\n\n\nn\nNúmero de ocurrencias del nombre\n\n\nproporcion\nproporción del nombre respecto del total de inscripciones del año"
  },
  {
    "objectID": "slides/clase-2/clase_2_presentación.html#cargar-datos",
    "href": "slides/clase-2/clase_2_presentación.html#cargar-datos",
    "title": "Tipos y estructuras de datos en R",
    "section": "Cargar datos",
    "text": "Cargar datos\nPara comenzar, se debe instalar y luego cargar el paquete guaguas, el cual contiene el conjunto de datos.\n\n# Cargamos el paquete\nif (!require(\"guaguas\")) install.packages(\"guaguas\")\nlibrary(guaguas)\n\nLuego, se asigna ese conjunto de datos a un objeto llamado datos.\n\n# Notar que el paquete guaguas tiene una función llamada \"guaguas\".\ndatos &lt;- guaguas\n\nSe puede visualizar usando la función View():\n\nView(datos)\n\n\nA continuación se presentan algunas funciones con las que cuenta R para inspeccionar los datos."
  },
  {
    "objectID": "slides/clase-2/clase_2_presentación.html#funciones-estructura-1",
    "href": "slides/clase-2/clase_2_presentación.html#funciones-estructura-1",
    "title": "Tipos y estructuras de datos en R",
    "section": "Funciones: Estructura (1)",
    "text": "Funciones: Estructura (1)\n\nstr(): muestra la estructura de los datos.\n\n\nstr(datos)\n\ntibble [858,782 × 5] (S3: tbl_df/tbl/data.frame)\n $ anio      : num [1:858782] 1920 1920 1920 1920 1920 1920 1920 1920 1920 1920 ...\n $ nombre    : chr [1:858782] \"María\" \"José\" \"Juan\" \"Luis\" ...\n $ sexo      : chr [1:858782] \"F\" \"M\" \"M\" \"M\" ...\n $ n         : num [1:858782] 2130 984 636 631 426 340 326 289 277 269 ...\n $ proporcion: num [1:858782] 0.1045 0.0483 0.0312 0.031 0.0209 ...\n - attr(*, \"spec\")=List of 3\n  ..$ cols   :List of 5\n  .. ..$ anio      : list()\n  .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n  .. ..$ nombre    : list()\n  .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_character\" \"collector\"\n  .. ..$ sexo      : list()\n  .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_character\" \"collector\"\n  .. ..$ n         : list()\n  .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n  .. ..$ proporcion: list()\n  .. .. ..- attr(*, \"class\")= chr [1:2] \"collector_double\" \"collector\"\n  ..$ default: list()\n  .. ..- attr(*, \"class\")= chr [1:2] \"collector_guess\" \"collector\"\n  ..$ delim  : chr \",\"\n  ..- attr(*, \"class\")= chr \"col_spec\"\n - attr(*, \"problems\")=&lt;externalptr&gt;"
  },
  {
    "objectID": "slides/clase-2/clase_2_presentación.html#funciones-estructura-2",
    "href": "slides/clase-2/clase_2_presentación.html#funciones-estructura-2",
    "title": "Tipos y estructuras de datos en R",
    "section": "Funciones: Estructura (2)",
    "text": "Funciones: Estructura (2)\n\ndim(): indica las dimensiones de un objeto. En este caso, el número de filas y columnas.\nnrow(): indica el número de filas.\nncol(): indica el número de columnas.\nnames(): entrega o define el nombre de las columnas.\n\n\ndim(datos)\n\n[1] 858782      5\n\nnrow(datos)\n\n[1] 858782\n\nncol(datos)\n\n[1] 5\n\nnames(datos)\n\n[1] \"anio\"       \"nombre\"     \"sexo\"       \"n\"          \"proporcion\""
  },
  {
    "objectID": "slides/clase-2/clase_2_presentación.html#funciones-consultar-1",
    "href": "slides/clase-2/clase_2_presentación.html#funciones-consultar-1",
    "title": "Tipos y estructuras de datos en R",
    "section": "Funciones: Consultar (1)",
    "text": "Funciones: Consultar (1)\n\nhead(x, n =): muestra las primeras n filas del objeto x.\ntail(x, n =): muestra las primeras n filas del objeto x.\n\n\nhead(datos, n = 4)\n\n# A tibble: 4 × 5\n   anio nombre sexo      n proporcion\n  &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt; &lt;dbl&gt;      &lt;dbl&gt;\n1  1920 María  F      2130     0.104 \n2  1920 José   M       984     0.0483\n3  1920 Juan   M       636     0.0312\n4  1920 Luis   M       631     0.0310\n\ntail(datos, n = 4)\n\n# A tibble: 4 × 5\n   anio nombre sexo      n proporcion\n  &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt; &lt;dbl&gt;      &lt;dbl&gt;\n1  2021 Zuri   F         1 0.00000562\n2  2021 Zurick F         1 0.00000562\n3  2021 Zury   F         1 0.00000562\n4  2021 Zyhara F         1 0.00000562"
  },
  {
    "objectID": "slides/clase-2/clase_2_presentación.html#funciones-resumen-1",
    "href": "slides/clase-2/clase_2_presentación.html#funciones-resumen-1",
    "title": "Tipos y estructuras de datos en R",
    "section": "Funciones: Resumen (1)",
    "text": "Funciones: Resumen (1)\n\nsummary(): entrega estadísticos de resumen.\n\n\nsummary(datos)\n\n      anio         nombre              sexo                 n           \n Min.   :1920   Length:858782      Length:858782      Min.   :    1.00  \n 1st Qu.:1960   Class :character   Class :character   1st Qu.:    1.00  \n Median :1985   Mode  :character   Mode  :character   Median :    1.00  \n Mean   :1981                                         Mean   :   25.77  \n 3rd Qu.:2004                                         3rd Qu.:    3.00  \n Max.   :2021                                         Max.   :21448.00  \n   proporcion       \n Min.   :3.060e-06  \n 1st Qu.:3.790e-06  \n Median :5.130e-06  \n Mean   :1.188e-04  \n 3rd Qu.:1.437e-05  \n Max.   :1.045e-01"
  },
  {
    "objectID": "slides/clase-2/clase_2_presentación.html#section-2",
    "href": "slides/clase-2/clase_2_presentación.html#section-2",
    "title": "Tipos y estructuras de datos en R",
    "section": "",
    "text": "III. Tipos de datos"
  },
  {
    "objectID": "slides/clase-2/clase_2_presentación.html#tipos-de-datos",
    "href": "slides/clase-2/clase_2_presentación.html#tipos-de-datos",
    "title": "Tipos y estructuras de datos en R",
    "section": "Tipos de datos",
    "text": "Tipos de datos\nComo revisamos en la clase anterior, R cuenta con una serie de tipos de datos definidos de antemano.\n\n\n\n\n\n\n\n\n\nTipo\nDescripción\nEjemplo\n\n\n\n\ninteger\nNúmeros enteros\n-1, 0, 1\n\n\nnumeric\nNúmeros reales\n-0.5, 1/2, 1\n\n\ncharacter\nTexto/String\n“Erwin”, “Armin”, “Sasha”, “Titanes”\n\n\nfactor\nDatos categóricos\n“Trabajo Social [1]”, “Otra carrera [2]”\n\n\nhaven_labelled\nValores numéricos con etiquetas asociadas\n1 = “Muy en desacuerdo”; 2 = “En desacuerdo”; 3 “Ni de acuerdo ni en desacuerdo”; 4 = “De acuerdo”; 5 “Muy de acuerdo”\n\n\nlogical\nVerdadero o falso\n“TRUE”, “FALSE”\n\n\nNA\nValores perdidos\nNA\n\n\nNULL\nObjetos nulos. Es devuelto por expresiones o funciones\nNULL"
  },
  {
    "objectID": "slides/clase-2/clase_2_presentación.html#enteros-y-numéricos-1",
    "href": "slides/clase-2/clase_2_presentación.html#enteros-y-numéricos-1",
    "title": "Tipos y estructuras de datos en R",
    "section": "Enteros y numéricos (1)",
    "text": "Enteros y numéricos (1)\nRepresentan números enteros, sin parte decimal. Pueden ser usados en operaciones matemáticas y en el contexto de bases de datos, contienen información para las observaciones.\nEn este caso, seleccionaremos la columna “n” que es de tipo numérica.\n\ndatos[, \"n\"]  # Seleccionamos todos los casos para la columna \"n\"\n\n# A tibble: 858,782 × 1\n       n\n   &lt;dbl&gt;\n 1  2130\n 2   984\n 3   636\n 4   631\n 5   426\n 6   340\n 7   326\n 8   289\n 9   277\n10   269\n# ℹ 858,772 more rows"
  },
  {
    "objectID": "slides/clase-2/clase_2_presentación.html#enteros-y-numéricos-2",
    "href": "slides/clase-2/clase_2_presentación.html#enteros-y-numéricos-2",
    "title": "Tipos y estructuras de datos en R",
    "section": "Enteros y numéricos (2)",
    "text": "Enteros y numéricos (2)\nY podríamos ordenar las filas de esa columna de manera descendente y agregarle más columnas para tener información de contexto.\n\ndatos[order(datos$n, decreasing = TRUE), c(\"anio\", \"nombre\", \"n\")]\n\n# A tibble: 858,782 × 3\n    anio nombre     n\n   &lt;dbl&gt; &lt;chr&gt;  &lt;dbl&gt;\n 1  1955 María  21448\n 2  1956 María  21013\n 3  1965 María  20382\n 4  1954 María  20172\n 5  1957 María  20154\n 6  1962 María  19862\n 7  1959 María  19701\n 8  1958 María  19593\n 9  1960 María  19581\n10  1953 María  19566\n# ℹ 858,772 more rows"
  },
  {
    "objectID": "slides/clase-2/clase_2_presentación.html#enteros-y-numéricos-3",
    "href": "slides/clase-2/clase_2_presentación.html#enteros-y-numéricos-3",
    "title": "Tipos y estructuras de datos en R",
    "section": "Enteros y numéricos (3)",
    "text": "Enteros y numéricos (3)\nAl aplicar operaciones matemáticas se debe tener cuidado con los datos perdidos.\n\nmis_numeros &lt;- c(7, 25, 33, 26)\nmean(mis_numeros)\n\n[1] 22.75\n\n\n\nmis_numeros_na &lt;- c(7, 25, 33, 26, NA)\nmean(mis_numeros_na)\n\n[1] NA\n\n\nLa media no se puede calcular si hay valores perdidos. En estos casos se debe excluir los valores perdidos usando la opción na.rm con valor TRUE.\n\nmis_numeros_na &lt;- c(7, 25, 33, 26, NA)\nmean(mis_numeros_na, na.rm = TRUE)\n\n[1] 22.75"
  },
  {
    "objectID": "slides/clase-2/clase_2_presentación.html#strings-o-texto-1",
    "href": "slides/clase-2/clase_2_presentación.html#strings-o-texto-1",
    "title": "Tipos y estructuras de datos en R",
    "section": "Strings o texto (1)",
    "text": "Strings o texto (1)\nCorresponden a cadenas de texto o también denominadas secuencias de caracteres. Se reconocen porque están encerradas en comillas simples ' ' o dobles \" \".\n\nmi_texto &lt;- \"Bienvenido/a. Su nombre es:\"\n\nCon la función paste() se pueden concatenar strings. Además, cuenta con el argumento sep que indica el separador que tendrá el texto. Por defecto es un espacio vacío.\n\npaste(mi_texto, \"Julio Cesar\", sep = \" \")\n\n[1] \"Bienvenido/a. Su nombre es: Julio Cesar\"\n\n\nY podemos usar cualquier separador.\n\npaste(mi_texto, \"Julio Cesar\", sep = \"------&gt;\")\n\n[1] \"Bienvenido/a. Su nombre es:------&gt;Julio Cesar\"\n\n\nY se pueden concatenar más de dos strings a la vez. En estos casos con el argumento collapse() para separar los resultados.\n\npaste(mi_texto, c(\"Julio Cesar\", \"Cesar Augusto\", \"Calígula\"), collapse = \"/---/\")\n\n[1] \"Bienvenido/a. Su nombre es: Julio Cesar/---/Bienvenido/a. Su nombre es: Cesar Augusto/---/Bienvenido/a. Su nombre es: Calígula\""
  },
  {
    "objectID": "slides/clase-2/clase_2_presentación.html#strings-o-texto-2",
    "href": "slides/clase-2/clase_2_presentación.html#strings-o-texto-2",
    "title": "Tipos y estructuras de datos en R",
    "section": "Strings o texto (2)",
    "text": "Strings o texto (2)\nTambién está la función paste0(). Esta no tiene como argumento sep y siempre concatenará sin espacios.\n\nmi_texto_2 &lt;- \"30/08/\"\npaste0(mi_texto_2, \"2023\")\n\n[1] \"30/08/2023\""
  },
  {
    "objectID": "slides/clase-2/clase_2_presentación.html#strings-o-texto-3",
    "href": "slides/clase-2/clase_2_presentación.html#strings-o-texto-3",
    "title": "Tipos y estructuras de datos en R",
    "section": "Strings o texto (3)",
    "text": "Strings o texto (3)\nOtras funciones útiles son:\n\ntoupper(x): convierte el vector a mayúsculas.\ntolower(x): convierte el vector a minúsculas.\nnchar(x): retorna el número de caracteres del string.\n\n\nmi_texto_3 &lt;- \"Hola Mundo\"\ntoupper(mi_texto_3)\n\n[1] \"HOLA MUNDO\"\n\ntolower(mi_texto_3)\n\n[1] \"hola mundo\"\n\nnchar(mi_texto_3) # Cuenta 10 porque espacio también es un caracter\n\n[1] 10\n\n\nAdemás R cuenta con otras funciones base para strings tales como grep() gsub()."
  },
  {
    "objectID": "slides/clase-2/clase_2_presentación.html#factores-1",
    "href": "slides/clase-2/clase_2_presentación.html#factores-1",
    "title": "Tipos y estructuras de datos en R",
    "section": "Factores (1)",
    "text": "Factores (1)\nEste es un tipo de dato específico de R para datos categóricos. Los factores toman un número acotado de valores distintos, los cuales son llamados niveles o levels.\nEjemplo1:\n\nSuponga que tiene una variable con valores para cuatro meses. Usar esta variable como un string tiene al menos dos problemas:\n\nLos valores válidos están restringidos a 12 categorías. Solo pueden ingresarse esos valores.\nSi quiero ordenarlo, lo hará alfabéticamente.\n\n\n\nx1 &lt;- c(\"Enero\", \"Febrero\", \"Marzo\", \"Abril\")\nx2 &lt;- c(\"Enero\", \"Febrerooo\", \"Marzooo\", \"Abril\")\nsort(x1) # No ordena como quisiéramos, porque es un string\n\n[1] \"Abril\"   \"Enero\"   \"Febrero\" \"Marzo\"  \n\n\nEjemplo adaptado de R For Data Science, segunda edición."
  },
  {
    "objectID": "slides/clase-2/clase_2_presentación.html#factores-2",
    "href": "slides/clase-2/clase_2_presentación.html#factores-2",
    "title": "Tipos y estructuras de datos en R",
    "section": "Factores (2)",
    "text": "Factores (2)\nLos factores buscan solucionar los problemas antes mencionados. Para crear un factor lo primero que debe hacerse es definir un vector de valores válidos, los que se asignarán al factor.\n\nmeses_levels &lt;- c(\n  \"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Mayo\", \"Junio\",\n  \"Julio\", \"Agosto\", \"Septiembre\", \"Octubre\", \"Noviembre\", \"Diciembre\"\n)\n\nfactor_x1 &lt;- factor(x1, levels = meses_levels)\nsort(factor_x1)\n\n[1] Enero   Febrero Marzo   Abril  \n12 Levels: Enero Febrero Marzo Abril Mayo Junio Julio Agosto ... Diciembre\n\n\nY cualquier valor que no sea parte de los levels del factor se convertirá en NA.\n\nmeses_levels &lt;- c(\n  \"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Mayo\", \"Junio\",\n  \"Julio\", \"Agosto\", \"Septiembre\", \"Octubre\", \"Noviembre\", \"Diciembre\"\n)\nfactor_x2 &lt;- factor(x2, levels = meses_levels)\nfactor_x2\n\n[1] Enero &lt;NA&gt;  &lt;NA&gt;  Abril\n12 Levels: Enero Febrero Marzo Abril Mayo Junio Julio Agosto ... Diciembre"
  },
  {
    "objectID": "slides/clase-2/clase_2_presentación.html#factores-3",
    "href": "slides/clase-2/clase_2_presentación.html#factores-3",
    "title": "Tipos y estructuras de datos en R",
    "section": "Factores (3)",
    "text": "Factores (3)\nLos factores nativos de R tienen algunos inconvenientes:\n\nConvierten directamente en NA los valores sin emitir alertas. Esto puede ser riesgoso.\nSi no se le entregan los levels al factor, estos serán ordenados automáticamente de manera alfabética. Sin embargo, esto no es deseable, porque no todos los computadores ordenan los strings de la misma forma.\n\nPor estas razones en el curso preferiremos paquetes que los implementan de otro modo."
  },
  {
    "objectID": "slides/clase-2/clase_2_presentación.html#section-3",
    "href": "slides/clase-2/clase_2_presentación.html#section-3",
    "title": "Tipos y estructuras de datos en R",
    "section": "",
    "text": "¡Gracias!  https://sirojasv.github.io/tsm_web/\n\n\n\n\n\n\nMetodología Cuantitativa - 2023"
  },
  {
    "objectID": "slides/clase-3/clase_3_presentación.html#aplicación-5",
    "href": "slides/clase-3/clase_3_presentación.html#aplicación-5",
    "title": "Introducción a Tidyverse",
    "section": "Aplicación (5)",
    "text": "Aplicación (5)\n\np1"
  },
  {
    "objectID": "slides/clase-3/clase_3_presentación.html#aplicación-6",
    "href": "slides/clase-3/clase_3_presentación.html#aplicación-6",
    "title": "Introducción a Tidyverse",
    "section": "Aplicación (6)",
    "text": "Aplicación (6)\n\np2"
  },
  {
    "objectID": "slides/clase-3/clase_3_presentación.html#aplicación-3-output",
    "href": "slides/clase-3/clase_3_presentación.html#aplicación-3-output",
    "title": "Introducción a Tidyverse",
    "section": "Aplicación (3)",
    "text": "Aplicación (3)\n\n\n\nFigura 1: % respecto del total de nacimientos registrados por año"
  },
  {
    "objectID": "slides/clase-3/clase_3_presentación.html#aplicación-4-output",
    "href": "slides/clase-3/clase_3_presentación.html#aplicación-4-output",
    "title": "Introducción a Tidyverse",
    "section": "Aplicación (4)",
    "text": "Aplicación (4)\n\n\n\nFigura 2: % respecto del total de nacimientos registrados por año"
  }
]